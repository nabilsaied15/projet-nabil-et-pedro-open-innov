{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/OneDrive/Bureau/projet%20epsizone%20-%20Copie/projet-nabil-et-pedro-open-innov/src/lib/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://fbbsameldccmlnxpugpn.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZiYnNhbWVsZGNjbWxueHB1Z3BuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg5NDMyMTMsImV4cCI6MjA2NDUxOTIxM30.OLz7Xl3U41VA-jVXDwLDVOV0qG5ivwFcIF_uuCnL5M4';\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/OneDrive/Bureau/projet%20epsizone%20-%20Copie/projet-nabil-et-pedro-open-innov/src/app/mes-candidatures/page.js"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '../../lib/supabaseClient';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function MesCandidaturesPage() {\r\n  const router = useRouter();\r\n  const [candidatures, setCandidatures] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [currentDossier, setCurrentDossier] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [editingCandidature, setEditingCandidature] = useState(null);\r\n  const [filterStatut, setFilterStatut] = useState('Tous');\r\n  const [newCandidature, setNewCandidature] = useState({\r\n    entreprise: '',\r\n    poste: '',\r\n    date_candidature: '',\r\n    statut: 'En attente',\r\n    notes: ''\r\n  });\r\n  const [cvFile, setCvFile] = useState(null);\r\n  const [cvUploading, setCvUploading] = useState(false);\r\n  const [cvError, setCvError] = useState('');\r\n  const [cvSuccess, setCvSuccess] = useState('');\r\n  const [uploadedCvs, setUploadedCvs] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isAiResponding, setIsAiResponding] = useState(false);\r\n  const [popup, setPopup] = useState({ show: false, type: '', message: '' });\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if (!user) {\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    // Récupérer l'ID du dossier depuis l'URL\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const dossierId = urlParams.get('dossier_id');\r\n    \r\n    if (!dossierId) {\r\n      router.push('/dossiers');\r\n      return;\r\n    }\r\n\r\n    // Récupérer le nom du dossier depuis la base de données\r\n    const fetchDossierName = async () => {\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('dossiers')\r\n          .select('nom')\r\n          .eq('id', parseInt(dossierId))\r\n          .single();\r\n\r\n        if (error) throw error;\r\n        \r\n        setCurrentUser(user);\r\n        setCurrentDossier({ id: dossierId, nom: data.nom });\r\n        fetchCandidatures(dossierId);\r\n        fetchMessages(dossierId);\r\n        fetchCvs(dossierId);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération du dossier:', error);\r\n        router.push('/dossiers');\r\n      }\r\n    };\r\n\r\n    fetchDossierName();\r\n  }, []);\r\n\r\n  const fetchCandidatures = async (dossierId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('candidatures')\r\n        .select('*')\r\n        .eq('dossier_id', parseInt(dossierId))\r\n        .order('date_candidature', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      setCandidatures(data || []);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des candidatures:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchMessages = async (dossierId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('conversations')\r\n        .select('*')\r\n        .eq('dossier_id', parseInt(dossierId))\r\n        .order('created_at', { ascending: true });\r\n\r\n      if (error) throw error;\r\n      console.log('Fetched messages data:', data);\r\n      setMessages(data || []);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des messages:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCvs = async (dossierId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('cvs')\r\n        .select('*')\r\n        .eq('dossier_id', parseInt(dossierId))\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      setUploadedCvs(data || []);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des CVs:', error);\r\n    }\r\n  };\r\n\r\n  const getCvUrl = async (filePath) => {\r\n    try {\r\n      const { data } = await supabase.storage\r\n        .from('cvs')\r\n        .createSignedUrl(filePath, 60); // URL valide pendant 60 secondes\r\n      return data?.signedUrl;\r\n    } catch (error) {\r\n      console.error('Erreur lors de la génération de l\\'URL:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleDownloadCv = async (cv) => {\r\n    try {\r\n      const url = await getCvUrl(cv.file_path);\r\n      if (url) {\r\n        window.open(url, '_blank');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors du téléchargement:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCv = async (cvId, filePath) => {\r\n    if (!confirm('Êtes-vous sûr de vouloir supprimer ce CV ?')) return;\r\n\r\n    try {\r\n      // Supprimer le fichier du stockage\r\n      const { error: storageError } = await supabase.storage\r\n        .from('cvs')\r\n        .remove([filePath]);\r\n\r\n      if (storageError) throw storageError;\r\n\r\n      // Supprimer l'enregistrement de la base de données\r\n      const { error: dbError } = await supabase\r\n        .from('cvs')\r\n        .delete()\r\n        .eq('id', cvId);\r\n\r\n      if (dbError) throw dbError;\r\n\r\n      // Rafraîchir la liste des CVs\r\n      await fetchCvs(currentDossier.id);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression:', error);\r\n      alert('Erreur lors de la suppression du CV');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingCandidature) {\r\n        // Modification d'une candidature existante\r\n        const { data, error } = await supabase\r\n          .from('candidatures')\r\n          .update(newCandidature)\r\n          .eq('id', editingCandidature.id)\r\n          .select();\r\n\r\n        if (error) throw error;\r\n\r\n        setCandidatures(candidatures.map(c => \r\n          c.id === editingCandidature.id ? data[0] : c\r\n        ));\r\n        // Afficher la popup si statut Accepté ou Refusé\r\n        if (data[0].statut === 'Accepté') {\r\n          setPopup({ show: true, type: 'success', message: 'Candidature acceptée !' });\r\n        } else if (data[0].statut === 'Refusé') {\r\n          setPopup({ show: true, type: 'error', message: 'Candidature refusée. Pleure pas ' });\r\n        }\r\n      } else {\r\n        // Création d'une nouvelle candidature\r\n        const { data, error } = await supabase\r\n          .from('candidatures')\r\n          .insert([\r\n            {\r\n              ...newCandidature,\r\n              dossier_id: parseInt(currentDossier.id)\r\n            }\r\n          ])\r\n          .select();\r\n\r\n        if (error) throw error;\r\n\r\n        setCandidatures([...candidatures, data[0]]);\r\n        // Afficher la popup si statut Accepté ou Refusé\r\n        if (data[0].statut === 'Accepté') {\r\n          setPopup({ show: true, type: 'success', message: 'Candidature acceptée !' });\r\n        } else if (data[0].statut === 'Refusé') {\r\n          setPopup({ show: true, type: 'error', message: 'Candidature refusée.' });\r\n        }\r\n      }\r\n\r\n      setNewCandidature({\r\n        entreprise: '',\r\n        poste: '',\r\n        date_candidature: '',\r\n        statut: 'En attente',\r\n        notes: ''\r\n      });\r\n      setEditingCandidature(null);\r\n      setShowForm(false);\r\n    } catch (error) {\r\n      console.error('Erreur lors de la création/modification de la candidature:', error);\r\n      alert('Erreur lors de la création/modification de la candidature');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (candidature) => {\r\n    setEditingCandidature(candidature);\r\n    setNewCandidature({\r\n      entreprise: candidature.entreprise,\r\n      poste: candidature.poste,\r\n      date_candidature: candidature.date_candidature,\r\n      statut: candidature.statut,\r\n      notes: candidature.notes || ''\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDelete = async (candidatureId) => {\r\n    if (!confirm('Êtes-vous sûr de vouloir supprimer cette candidature ?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { error } = await supabase\r\n        .from('candidatures')\r\n        .delete()\r\n        .eq('id', candidatureId);\r\n\r\n      if (error) throw error;\r\n\r\n      setCandidatures(candidatures.filter(c => c.id !== candidatureId));\r\n    } catch (error) {\r\n      console.error('Erreur lors de la suppression de la candidature:', error);\r\n      alert('Erreur lors de la suppression de la candidature');\r\n    }\r\n  };\r\n\r\n  const handleCvUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Vérifier le type de fichier\r\n    const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\r\n    if (!allowedTypes.includes(file.type)) {\r\n      setCvError('Format de fichier non supporté. Utilisez PDF, DOC ou DOCX.');\r\n      return;\r\n    }\r\n\r\n    // Vérifier la taille du fichier (max 5MB)\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      setCvError('Le fichier est trop volumineux. Taille maximale : 5MB');\r\n      return;\r\n    }\r\n\r\n    setCvFile(file);\r\n    setCvError('');\r\n    setCvSuccess('');\r\n  };\r\n\r\n  const uploadCv = async () => {\r\n    if (!cvFile || !currentDossier) return;\r\n\r\n    setCvUploading(true);\r\n    setCvError('');\r\n    setCvSuccess('');\r\n\r\n    try {\r\n      // 1. Téléverser le fichier dans le bucket Supabase\r\n      const fileExt = cvFile.name.split('.').pop();\r\n      const fileName = `${currentDossier.id}/${Date.now()}.${fileExt}`;\r\n      \r\n      console.log('Tentative de téléversement du fichier:', fileName);\r\n      \r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('cvs')\r\n        .upload(fileName, cvFile, {\r\n          cacheControl: '3600',\r\n          upsert: false\r\n        });\r\n\r\n      if (uploadError) {\r\n        console.error('Erreur de téléversement:', uploadError);\r\n        throw new Error(`Erreur de téléversement: ${uploadError.message}`);\r\n      }\r\n\r\n      console.log('Fichier téléversé avec succès:', uploadData);\r\n\r\n      // 2. Enregistrer les métadonnées dans la table cvs\r\n      const { data: dbData, error: dbError } = await supabase\r\n        .from('cvs')\r\n        .insert([{\r\n          dossier_id: parseInt(currentDossier.id),\r\n          file_name: cvFile.name,\r\n          file_path: fileName,\r\n          file_type: cvFile.type,\r\n          file_size: cvFile.size\r\n        }])\r\n        .select();\r\n\r\n      if (dbError) {\r\n        console.error('Erreur de base de données:', dbError);\r\n        // Si l'insertion échoue, supprimer le fichier téléversé\r\n        await supabase.storage\r\n          .from('cvs')\r\n          .remove([fileName]);\r\n        throw new Error(`Erreur de base de données: ${dbError.message}`);\r\n      }\r\n\r\n      console.log('Métadonnées enregistrées avec succès:', dbData);\r\n      setCvSuccess('CV téléversé avec succès !');\r\n      setCvFile(null);\r\n      // Rafraîchir la liste des CVs\r\n      await fetchCvs(currentDossier.id);\r\n    } catch (error) {\r\n      console.error('Erreur détaillée:', error);\r\n      setCvError(`Erreur lors du téléversement du CV: ${error.message}`);\r\n    } finally {\r\n      setCvUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !currentDossier || !currentUser) {\r\n      console.log('Validation failed:', {\r\n        message: newMessage,\r\n        dossier: currentDossier,\r\n        user: currentUser\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Si l'utilisateur est admin, le message est considéré comme un message de l'IA\r\n      const isAdmin = currentUser.role === 'admin';\r\n\r\n      console.log('Attempting to send message with data:', {\r\n        dossier_id: parseInt(currentDossier.id),\r\n        message: newMessage,\r\n        user_name: isAdmin ? 'Admin' : currentUser.name,\r\n        is_ai: isAdmin\r\n      });\r\n\r\n      // Ajouter le message\r\n      const { data: userMessageData, error: userError } = await supabase\r\n        .from('conversations')\r\n        .insert([{\r\n          dossier_id: parseInt(currentDossier.id),\r\n          message: newMessage,\r\n          is_ai: isAdmin,\r\n          user_name: isAdmin ? 'Admin' : currentUser.name,\r\n          created_at: new Date().toISOString()\r\n        }])\r\n        .select();\r\n\r\n      if (userError) {\r\n        console.error('Erreur détaillée lors de l\\'envoi du message:', userError);\r\n        throw new Error(`Erreur lors de l'envoi du message: ${userError.message}`);\r\n      }\r\n\r\n      console.log('Message envoyé avec succès:', userMessageData);\r\n\r\n      // Mettre à jour l'état local\r\n      setMessages(prev => [...prev, userMessageData[0]]);\r\n      setNewMessage('');\r\n    } catch (error) {\r\n      console.error('Erreur complète lors de l\\'envoi du message:', error);\r\n      alert(`Erreur lors de l'envoi du message: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const filteredCandidatures = candidatures.filter(candidature => \r\n    filterStatut === 'Tous' || candidature.statut === filterStatut\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (popup.show) {\r\n      const timer = setTimeout(() => {\r\n        setPopup({ show: false, type: '', message: '' });\r\n      }, 2000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [popup]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      {/* POPUP MODAL */}\r\n      {popup.show && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-50\">\r\n          <div className={`p-8 rounded-xl shadow-lg text-2xl font-bold transition-all\r\n            ${popup.type === 'success' ? 'bg-green-500 text-white' : ''}\r\n            ${popup.type === 'error' ? 'bg-red-500 text-white' : ''}\r\n          `}>\r\n            {popup.message}\r\n          </div>\r\n          <div\r\n            className=\"fixed inset-0 bg-black opacity-30\"\r\n            onClick={() => setPopup({ show: false, type: '', message: '' })}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"p-10\">\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <div>\r\n            <h2 className=\"text-2xl font-bold\">Mes Candidatures</h2>\r\n            {currentDossier && (\r\n              <p className=\"text-gray-400 mt-2\">Dossier : {currentDossier.nom}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"flex gap-4\">\r\n            <select\r\n              value={filterStatut}\r\n              onChange={(e) => setFilterStatut(e.target.value)}\r\n              className=\"px-4 py-2 rounded-md border focus:outline-none\"\r\n            >\r\n              <option value=\"Tous\">Tous les statuts</option>\r\n              <option value=\"En attente\">En attente</option>\r\n              <option value=\"Entretien\">Entretien</option>\r\n              <option value=\"Refusé\">Refusé</option>\r\n              <option value=\"Accepté\">Accepté</option>\r\n            </select>\r\n            <button\r\n              onClick={() => {\r\n                setShowForm(!showForm);\r\n                if (!showForm) {\r\n                  setEditingCandidature(null);\r\n                  setNewCandidature({\r\n                    entreprise: '',\r\n                    poste: '',\r\n                    date_candidature: '',\r\n                    statut: 'En attente',\r\n                    notes: ''\r\n                  });\r\n                }\r\n              }}\r\n              className=\"button px-4 py-2 rounded-md transition duration-200\"\r\n            >\r\n              {showForm ? 'Annuler' : 'Ajouter une candidature'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {showForm && (\r\n          <div className=\"rounded-lg p-6 mb-8\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">\r\n              {editingCandidature ? 'Modifier la candidature' : 'Nouvelle Candidature'}\r\n            </h3>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Entreprise\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCandidature.entreprise}\r\n                  onChange={(e) => setNewCandidature({ ...newCandidature, entreprise: e.target.value })}\r\n                  className=\"w-full p-2 rounded border focus:outline-none\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Poste\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newCandidature.poste}\r\n                  onChange={(e) => setNewCandidature({ ...newCandidature, poste: e.target.value })}\r\n                  className=\"w-full p-2 rounded border focus:outline-none\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Date de candidature\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={newCandidature.date_candidature}\r\n                  onChange={(e) => setNewCandidature({ ...newCandidature, date_candidature: e.target.value })}\r\n                  className=\"w-full p-2 rounded border focus:outline-none\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Statut\r\n                </label>\r\n                <select\r\n                  value={newCandidature.statut}\r\n                  onChange={(e) => setNewCandidature({ ...newCandidature, statut: e.target.value })}\r\n                  className=\"w-full p-2 rounded border focus:outline-none\"\r\n                  required\r\n                >\r\n                  <option value=\"En attente\">En attente</option>\r\n                  <option value=\"Entretien\">Entretien</option>\r\n                  <option value=\"Refusé\">Refusé</option>\r\n                  <option value=\"Accepté\">Accepté</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                  Notes\r\n                </label>\r\n                <textarea\r\n                  value={newCandidature.notes}\r\n                  onChange={(e) => setNewCandidature({ ...newCandidature, notes: e.target.value })}\r\n                  className=\"w-full p-2 rounded border focus:outline-none\"\r\n                  rows=\"3\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button px-4 py-2 rounded-md transition duration-200\"\r\n              >\r\n                {editingCandidature ? 'Modifier' : 'Ajouter'} la candidature\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredCandidatures.map((candidature) => (\r\n            <div\r\n              key={candidature.id}\r\n              className={`rounded-2xl p-4 shadow-md hover:shadow-xl transition relative overflow-hidden border border-primary\r\n                ${candidature.statut === 'Accepté' ? 'bg-green-200 ring-4 ring-success' : ''}\r\n                ${candidature.statut === 'Refusé' ? 'bg-red-200' : ''}\r\n                ${candidature.statut !== 'Accepté' && candidature.statut !== 'Refusé' ? 'bg-white' : ''}\r\n              `}\r\n            >\r\n              <div className=\"flex justify-between items-start mb-2\">\r\n                <h3 className=\"font-semibold text-lg text-primary\">{candidature.entreprise}</h3>\r\n                <div className=\"flex gap-2\">\r\n                  <button\r\n                    onClick={() => handleEdit(candidature)}\r\n                    className=\"text-blue-400 hover:text-blue-300\"\r\n                  >\r\n                    ✏️\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(candidature.id)}\r\n                    className=\"text-red-400 hover:text-red-300\"\r\n                  >\r\n                    🗑️\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <p className=\"text-sm mb-1\">Poste : {candidature.poste}</p>\r\n              <p className=\"text-sm mb-1\">\r\n                Date : {new Date(candidature.date_candidature).toLocaleDateString()}\r\n              </p>\r\n              <p className=\"text-sm mb-1\">\r\n                Statut : <span className={`${\r\n                  candidature.statut === 'Accepté' ? 'text-green-400 font-bold animate-bounce' :\r\n                  candidature.statut === 'Refusé' ? 'text-red-400' :\r\n                  candidature.statut === 'Entretien' ? 'text-yellow-400' :\r\n                  'text-gray-400'\r\n                }`}>{candidature.statut}</span>\r\n              </p>\r\n              {candidature.notes && (\r\n                <p className=\"text-sm mt-2 border-t border-primary pt-2\">\r\n                  {candidature.notes}\r\n                </p>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {filteredCandidatures.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <p className=\"text-gray-400\">\r\n              {candidatures.length === 0 \r\n                ? \"Aucune candidature enregistrée.\"\r\n                : \"Aucune candidature ne correspond au filtre sélectionné.\"}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Section CV et Conversation */}\r\n        <div className=\"mt-12 grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          {/* Section Téléversement CV */}\r\n          <div className=\"rounded-xl p-6 border border-primary bg-gray-100\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">📄 CV pour {currentDossier?.nom}</h3>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"border-2 border-dashed border-primary rounded-lg p-6 text-center bg-white\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".pdf,.doc,.docx\"\r\n                  className=\"hidden\"\r\n                  id=\"cv-upload\"\r\n                  onChange={handleCvUpload}\r\n                />\r\n                <label\r\n                  htmlFor=\"cv-upload\"\r\n                  className=\"cursor-pointer block\"\r\n                >\r\n                  <div className=\"text-gray-400 mb-2\">\r\n                    <svg className=\"mx-auto h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\r\n                    </svg>\r\n                  </div>\r\n                  <p className=\"text-gray-300\">Cliquez pour sélectionner votre CV</p>\r\n                  <p className=\"text-gray-400 text-sm mt-1\">Formats acceptés: PDF, DOC, DOCX</p>\r\n                </label>\r\n              </div>\r\n              {cvFile && (\r\n                <div className=\"text-sm text-primary\">\r\n                  Fichier sélectionné : {cvFile.name}\r\n                </div>\r\n              )}\r\n              {cvError && (\r\n                <div className=\"text-sm text-error\">\r\n                  {cvError}\r\n                </div>\r\n              )}\r\n              {cvSuccess && (\r\n                <div className=\"text-sm text-success\">\r\n                  {cvSuccess}\r\n                </div>\r\n              )}\r\n              <button\r\n                className=\"button px-4 py-2 rounded-lg transition-colors disabled:opacity-50\"\r\n                onClick={uploadCv}\r\n                disabled={!cvFile || cvUploading}\r\n              >\r\n                {cvUploading ? 'Téléversement en cours...' : 'Téléverser CV'}\r\n              </button>\r\n\r\n              {/* Liste des CVs téléversés */}\r\n              {uploadedCvs.length > 0 && (\r\n                <div className=\"mt-6\">\r\n                  <h4 className=\"text-lg font-semibold mb-3\">CVs téléversés</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {uploadedCvs.map((cv) => (\r\n                      <div key={cv.id} className=\"bg-gray-200 rounded-lg p-3 flex items-center justify-between border border-primary\">\r\n                        <div className=\"flex-1\">\r\n                          <p className=\"text-sm font-medium text-primary\">{cv.file_name}</p>\r\n                          <p className=\"text-xs text-primary/70\">\r\n                            Téléversé le {new Date(cv.created_at).toLocaleDateString()}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"flex gap-2\">\r\n                          <button\r\n                            onClick={() => handleDownloadCv(cv)}\r\n                            className=\"text-accent hover:text-accent/80\"\r\n                            title=\"Télécharger\"\r\n                          >\r\n                            ⬇️\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteCv(cv.id, cv.file_path)}\r\n                            className=\"text-error hover:text-error/80\"\r\n                            title=\"Supprimer\"\r\n                          >\r\n                            🗑️\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Section Conversation */}\r\n          <div className=\"rounded-xl p-6 border border-primary bg-gray-100\">\r\n            <h3 className=\"text-xl font-semibold mb-4\">💬 Messages pour {currentDossier?.nom}</h3>\r\n            <div className=\"flex flex-col h-[600px] bg-white rounded-lg border border-primary\">\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                {messages.length === 0 ? (\r\n                  <div className=\"text-center text-primary/60 py-8\">\r\n                    <p>Aucun message</p>\r\n                    <p className=\"text-sm mt-2\">Envoyez un message pour commencer la conversation</p>\r\n                  </div>\r\n                ) : (\r\n                  messages.map((message) => {\r\n                    // Si le nom de l'utilisateur est 'Admin', afficher à gauche en gris\r\n                    // Sinon, afficher à droite en bleu\r\n                    const isMessageFromAdmin = message.user_name === 'Admin';\r\n\r\n                    return (\r\n                      <div\r\n                        key={message.id}\r\n                        className={`w-full flex ${isMessageFromAdmin ? 'justify-start' : 'justify-end'}`}\r\n                      >\r\n                        <div\r\n                          className={`max-w-[80%] p-4 rounded-lg border ${\r\n                            isMessageFromAdmin\r\n                              ? 'bg-gray-200 text-primary rounded-tl-none border-primary'\r\n                              : 'bg-accent text-white rounded-tr-none border-accent'\r\n                          }`}\r\n                        >\r\n                          <p className=\"text-xs font-semibold mb-1\">\r\n                            {message.user_name || 'Admin'}\r\n                          </p>\r\n                          <p className=\"text-sm\">{message.message}</p>\r\n                          <p className=\"text-xs opacity-75 mt-2\">\r\n                            {new Date(message.created_at).toLocaleString()}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n              <div className=\"border-t border-primary p-4 bg-white\">\r\n                <form onSubmit={handleSendMessage} className=\"flex gap-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    placeholder=\"Écrivez votre message...\"\r\n                    className=\"flex-1 bg-gray-100 text-primary rounded-lg px-4 py-2 border border-primary focus:outline-none focus:ring-2 focus:ring-accent\"\r\n                  />\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"button px-4 py-2 rounded-lg transition-colors disabled:opacity-50\"\r\n                    disabled={!newMessage.trim()}\r\n                  >\r\n                    Envoyer\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx global>{`\r\n        @keyframes shine {\r\n          0% {\r\n            transform: translateX(-100%);\r\n          }\r\n          100% {\r\n            transform: translateX(100%);\r\n          }\r\n        }\r\n\r\n        .animate-shine {\r\n          animation: shine 2s infinite;\r\n        }\r\n      `}</style>\r\n\r\n      <style jsx>{`\r\n        .message-container {\r\n          display: flex;\r\n          width: 100%;\r\n          margin-bottom: 1rem;\r\n        }\r\n        .message-user {\r\n          justify-content: flex-end;\r\n        }\r\n        .message-admin {\r\n          justify-content: flex-start;\r\n        }\r\n        .message-bubble {\r\n          max-width: 80%;\r\n          padding: 1rem;\r\n          border-radius: 0.5rem;\r\n          box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n        }\r\n        .message-user-bubble {\r\n          background-color: #2563eb;\r\n          color: white;\r\n          border-top-right-radius: 0;\r\n        }\r\n        .message-admin-bubble {\r\n          background-color: #374151;\r\n          color: white;\r\n          border-top-left-radius: 0;\r\n        }\r\n        .message-bubble p {\r\n          margin: 0;\r\n          line-height: 1.5;\r\n        }\r\n        .message-bubble .timestamp {\r\n          font-size: 0.75rem;\r\n          opacity: 0.7;\r\n          margin-top: 0.5rem;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}