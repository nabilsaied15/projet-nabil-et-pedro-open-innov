{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/Downloads/hello-main/hello-main/src/lib/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = 'https://fbbsameldccmlnxpugpn.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZiYnNhbWVsZGNjbWxueHB1Z3BuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg5NDMyMTMsImV4cCI6MjA2NDUxOTIxM30.OLz7Xl3U41VA-jVXDwLDVOV0qG5ivwFcIF_uuCnL5M4';\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/Downloads/hello-main/hello-main/src/app/mes-candidatures/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { supabase } from '../../lib/supabaseClient';\nimport { useRouter } from 'next/navigation';\n\nexport default function MesCandidaturesPage() {\n  const router = useRouter();\n  const [candidatures, setCandidatures] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [currentDossier, setCurrentDossier] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [editingCandidature, setEditingCandidature] = useState(null);\n  const [filterStatut, setFilterStatut] = useState('Tous');\n  const [newCandidature, setNewCandidature] = useState({\n    entreprise: '',\n    poste: '',\n    date_candidature: '',\n    statut: 'En attente',\n    notes: ''\n  });\n  const [cvFile, setCvFile] = useState(null);\n  const [cvUploading, setCvUploading] = useState(false);\n  const [cvError, setCvError] = useState('');\n  const [cvSuccess, setCvSuccess] = useState('');\n  const [uploadedCvs, setUploadedCvs] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isAiResponding, setIsAiResponding] = useState(false);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    \n    if (!user) {\n      router.push('/login');\n      return;\n    }\n\n    // Récupérer l'ID du dossier depuis l'URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const dossierId = urlParams.get('dossier_id');\n    \n    if (!dossierId) {\n      router.push('/dossiers');\n      return;\n    }\n\n    // Récupérer le nom du dossier depuis la base de données\n    const fetchDossierName = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('dossiers')\n          .select('nom')\n          .eq('id', parseInt(dossierId))\n          .single();\n\n        if (error) throw error;\n        \n        setCurrentUser(user);\n        setCurrentDossier({ id: dossierId, nom: data.nom });\n        fetchCandidatures(dossierId);\n        fetchMessages(dossierId);\n        fetchCvs(dossierId);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du dossier:', error);\n        router.push('/dossiers');\n      }\n    };\n\n    fetchDossierName();\n  }, []);\n\n  const fetchCandidatures = async (dossierId) => {\n    try {\n      const { data, error } = await supabase\n        .from('candidatures')\n        .select('*')\n        .eq('dossier_id', parseInt(dossierId))\n        .order('date_candidature', { ascending: false });\n\n      if (error) throw error;\n      setCandidatures(data || []);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des candidatures:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMessages = async (dossierId) => {\n    try {\n      const { data, error } = await supabase\n        .from('conversations')\n        .select('*')\n        .eq('dossier_id', parseInt(dossierId))\n        .order('created_at', { ascending: true });\n\n      if (error) throw error;\n      console.log('Fetched messages data:', data);\n      setMessages(data || []);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des messages:', error);\n    }\n  };\n\n  const fetchCvs = async (dossierId) => {\n    try {\n      const { data, error } = await supabase\n        .from('cvs')\n        .select('*')\n        .eq('dossier_id', parseInt(dossierId))\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setUploadedCvs(data || []);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des CVs:', error);\n    }\n  };\n\n  const getCvUrl = async (filePath) => {\n    try {\n      const { data } = await supabase.storage\n        .from('cvs')\n        .createSignedUrl(filePath, 60); // URL valide pendant 60 secondes\n      return data?.signedUrl;\n    } catch (error) {\n      console.error('Erreur lors de la génération de l\\'URL:', error);\n      return null;\n    }\n  };\n\n  const handleDownloadCv = async (cv) => {\n    try {\n      const url = await getCvUrl(cv.file_path);\n      if (url) {\n        window.open(url, '_blank');\n      }\n    } catch (error) {\n      console.error('Erreur lors du téléchargement:', error);\n    }\n  };\n\n  const handleDeleteCv = async (cvId, filePath) => {\n    if (!confirm('Êtes-vous sûr de vouloir supprimer ce CV ?')) return;\n\n    try {\n      // Supprimer le fichier du stockage\n      const { error: storageError } = await supabase.storage\n        .from('cvs')\n        .remove([filePath]);\n\n      if (storageError) throw storageError;\n\n      // Supprimer l'enregistrement de la base de données\n      const { error: dbError } = await supabase\n        .from('cvs')\n        .delete()\n        .eq('id', cvId);\n\n      if (dbError) throw dbError;\n\n      // Rafraîchir la liste des CVs\n      await fetchCvs(currentDossier.id);\n    } catch (error) {\n      console.error('Erreur lors de la suppression:', error);\n      alert('Erreur lors de la suppression du CV');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (editingCandidature) {\n        // Modification d'une candidature existante\n        const { data, error } = await supabase\n          .from('candidatures')\n          .update(newCandidature)\n          .eq('id', editingCandidature.id)\n          .select();\n\n        if (error) throw error;\n\n        setCandidatures(candidatures.map(c => \n          c.id === editingCandidature.id ? data[0] : c\n        ));\n      } else {\n        // Création d'une nouvelle candidature\n        const { data, error } = await supabase\n          .from('candidatures')\n          .insert([\n            {\n              ...newCandidature,\n              dossier_id: parseInt(currentDossier.id)\n            }\n          ])\n          .select();\n\n        if (error) throw error;\n\n        setCandidatures([...candidatures, data[0]]);\n      }\n\n      setNewCandidature({\n        entreprise: '',\n        poste: '',\n        date_candidature: '',\n        statut: 'En attente',\n        notes: ''\n      });\n      setEditingCandidature(null);\n      setShowForm(false);\n    } catch (error) {\n      console.error('Erreur lors de la création/modification de la candidature:', error);\n      alert('Erreur lors de la création/modification de la candidature');\n    }\n  };\n\n  const handleEdit = (candidature) => {\n    setEditingCandidature(candidature);\n    setNewCandidature({\n      entreprise: candidature.entreprise,\n      poste: candidature.poste,\n      date_candidature: candidature.date_candidature,\n      statut: candidature.statut,\n      notes: candidature.notes || ''\n    });\n    setShowForm(true);\n  };\n\n  const handleDelete = async (candidatureId) => {\n    if (!confirm('Êtes-vous sûr de vouloir supprimer cette candidature ?')) {\n      return;\n    }\n\n    try {\n      const { error } = await supabase\n        .from('candidatures')\n        .delete()\n        .eq('id', candidatureId);\n\n      if (error) throw error;\n\n      setCandidatures(candidatures.filter(c => c.id !== candidatureId));\n    } catch (error) {\n      console.error('Erreur lors de la suppression de la candidature:', error);\n      alert('Erreur lors de la suppression de la candidature');\n    }\n  };\n\n  const handleCvUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Vérifier le type de fichier\n    const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n    if (!allowedTypes.includes(file.type)) {\n      setCvError('Format de fichier non supporté. Utilisez PDF, DOC ou DOCX.');\n      return;\n    }\n\n    // Vérifier la taille du fichier (max 5MB)\n    if (file.size > 5 * 1024 * 1024) {\n      setCvError('Le fichier est trop volumineux. Taille maximale : 5MB');\n      return;\n    }\n\n    setCvFile(file);\n    setCvError('');\n    setCvSuccess('');\n  };\n\n  const uploadCv = async () => {\n    if (!cvFile || !currentDossier) return;\n\n    setCvUploading(true);\n    setCvError('');\n    setCvSuccess('');\n\n    try {\n      // 1. Téléverser le fichier dans le bucket Supabase\n      const fileExt = cvFile.name.split('.').pop();\n      const fileName = `${currentDossier.id}/${Date.now()}.${fileExt}`;\n      \n      console.log('Tentative de téléversement du fichier:', fileName);\n      \n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('cvs')\n        .upload(fileName, cvFile, {\n          cacheControl: '3600',\n          upsert: false\n        });\n\n      if (uploadError) {\n        console.error('Erreur de téléversement:', uploadError);\n        throw new Error(`Erreur de téléversement: ${uploadError.message}`);\n      }\n\n      console.log('Fichier téléversé avec succès:', uploadData);\n\n      // 2. Enregistrer les métadonnées dans la table cvs\n      const { data: dbData, error: dbError } = await supabase\n        .from('cvs')\n        .insert([{\n          dossier_id: parseInt(currentDossier.id),\n          file_name: cvFile.name,\n          file_path: fileName,\n          file_type: cvFile.type,\n          file_size: cvFile.size\n        }])\n        .select();\n\n      if (dbError) {\n        console.error('Erreur de base de données:', dbError);\n        // Si l'insertion échoue, supprimer le fichier téléversé\n        await supabase.storage\n          .from('cvs')\n          .remove([fileName]);\n        throw new Error(`Erreur de base de données: ${dbError.message}`);\n      }\n\n      console.log('Métadonnées enregistrées avec succès:', dbData);\n      setCvSuccess('CV téléversé avec succès !');\n      setCvFile(null);\n      // Rafraîchir la liste des CVs\n      await fetchCvs(currentDossier.id);\n    } catch (error) {\n      console.error('Erreur détaillée:', error);\n      setCvError(`Erreur lors du téléversement du CV: ${error.message}`);\n    } finally {\n      setCvUploading(false);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !currentDossier || !currentUser) {\n      console.log('Validation failed:', {\n        message: newMessage,\n        dossier: currentDossier,\n        user: currentUser\n      });\n      return;\n    }\n\n    try {\n      // Si l'utilisateur est admin, le message est considéré comme un message de l'IA\n      const isAdmin = currentUser.role === 'admin';\n\n      console.log('Attempting to send message with data:', {\n        dossier_id: parseInt(currentDossier.id),\n        message: newMessage,\n        user_name: isAdmin ? 'Admin' : currentUser.name,\n        is_ai: isAdmin\n      });\n\n      // Ajouter le message\n      const { data: userMessageData, error: userError } = await supabase\n        .from('conversations')\n        .insert([{\n          dossier_id: parseInt(currentDossier.id),\n          message: newMessage,\n          is_ai: isAdmin,\n          user_name: isAdmin ? 'Admin' : currentUser.name,\n          created_at: new Date().toISOString()\n        }])\n        .select();\n\n      if (userError) {\n        console.error('Erreur détaillée lors de l\\'envoi du message:', userError);\n        throw new Error(`Erreur lors de l'envoi du message: ${userError.message}`);\n      }\n\n      console.log('Message envoyé avec succès:', userMessageData);\n\n      // Mettre à jour l'état local\n      setMessages(prev => [...prev, userMessageData[0]]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Erreur complète lors de l\\'envoi du message:', error);\n      alert(`Erreur lors de l'envoi du message: ${error.message}`);\n    }\n  };\n\n  const filteredCandidatures = candidatures.filter(candidature => \n    filterStatut === 'Tous' || candidature.statut === filterStatut\n  );\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <div className=\"p-10\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h2 className=\"text-2xl font-bold\">Mes Candidatures</h2>\n            {currentDossier && (\n              <p className=\"text-gray-400 mt-2\">Dossier : {currentDossier.nom}</p>\n            )}\n          </div>\n          <div className=\"flex gap-4\">\n            <select\n              value={filterStatut}\n              onChange={(e) => setFilterStatut(e.target.value)}\n              className=\"bg-gray-700 text-white px-4 py-2 rounded-md border border-gray-600 focus:border-blue-500 focus:outline-none\"\n            >\n              <option value=\"Tous\">Tous les statuts</option>\n              <option value=\"En attente\">En attente</option>\n              <option value=\"Entretien\">Entretien</option>\n              <option value=\"Refusé\">Refusé</option>\n              <option value=\"Accepté\">Accepté</option>\n            </select>\n            <button\n              onClick={() => {\n                setShowForm(!showForm);\n                if (!showForm) {\n                  setEditingCandidature(null);\n                  setNewCandidature({\n                    entreprise: '',\n                    poste: '',\n                    date_candidature: '',\n                    statut: 'En attente',\n                    notes: ''\n                  });\n                }\n              }}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition duration-200\"\n            >\n              {showForm ? 'Annuler' : 'Ajouter une candidature'}\n            </button>\n          </div>\n        </div>\n\n        {showForm && (\n          <div className=\"bg-gray-800 rounded-lg p-6 mb-8\">\n            <h3 className=\"text-xl font-semibold mb-4\">\n              {editingCandidature ? 'Modifier la candidature' : 'Nouvelle Candidature'}\n            </h3>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Entreprise\n                </label>\n                <input\n                  type=\"text\"\n                  value={newCandidature.entreprise}\n                  onChange={(e) => setNewCandidature({ ...newCandidature, entreprise: e.target.value })}\n                  className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 focus:outline-none\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Poste\n                </label>\n                <input\n                  type=\"text\"\n                  value={newCandidature.poste}\n                  onChange={(e) => setNewCandidature({ ...newCandidature, poste: e.target.value })}\n                  className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 focus:outline-none\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Date de candidature\n                </label>\n                <input\n                  type=\"date\"\n                  value={newCandidature.date_candidature}\n                  onChange={(e) => setNewCandidature({ ...newCandidature, date_candidature: e.target.value })}\n                  className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 focus:outline-none\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Statut\n                </label>\n                <select\n                  value={newCandidature.statut}\n                  onChange={(e) => setNewCandidature({ ...newCandidature, statut: e.target.value })}\n                  className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 focus:outline-none\"\n                  required\n                >\n                  <option value=\"En attente\">En attente</option>\n                  <option value=\"Entretien\">Entretien</option>\n                  <option value=\"Refusé\">Refusé</option>\n                  <option value=\"Accepté\">Accepté</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                  Notes\n                </label>\n                <textarea\n                  value={newCandidature.notes}\n                  onChange={(e) => setNewCandidature({ ...newCandidature, notes: e.target.value })}\n                  className=\"w-full p-2 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 focus:outline-none\"\n                  rows=\"3\"\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition duration-200\"\n              >\n                {editingCandidature ? 'Modifier' : 'Ajouter'} la candidature\n              </button>\n            </form>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredCandidatures.map((candidature) => (\n            <div\n              key={candidature.id}\n              className={`bg-[#121826] border ${\n                candidature.statut === 'Accepté' \n                ? 'border-green-500 animate-pulse shadow-lg shadow-green-500/20' \n                : 'border-white'\n              } rounded-2xl p-4 shadow-md hover:shadow-xl transition relative overflow-hidden`}\n            >\n              {candidature.statut === 'Accepté' && (\n                <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-green-500/10 to-transparent animate-shine\" />\n              )}\n              <div className=\"flex justify-between items-start mb-2\">\n                <h3 className=\"font-semibold text-lg text-white\">{candidature.entreprise}</h3>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => handleEdit(candidature)}\n                    className=\"text-blue-400 hover:text-blue-300\"\n                  >\n                    ✏️\n                  </button>\n                  <button\n                    onClick={() => handleDelete(candidature.id)}\n                    className=\"text-red-400 hover:text-red-300\"\n                  >\n                    🗑️\n                  </button>\n                </div>\n              </div>\n              <p className=\"text-gray-400 text-sm mb-1\">Poste : {candidature.poste}</p>\n              <p className=\"text-gray-400 text-sm mb-1\">\n                Date : {new Date(candidature.date_candidature).toLocaleDateString()}\n              </p>\n              <p className=\"text-gray-400 text-sm mb-1\">\n                Statut : <span className={`${\n                  candidature.statut === 'Accepté' ? 'text-green-400 font-bold animate-bounce' :\n                  candidature.statut === 'Refusé' ? 'text-red-400' :\n                  candidature.statut === 'Entretien' ? 'text-yellow-400' :\n                  'text-gray-400'\n                }`}>{candidature.statut}</span>\n              </p>\n              {candidature.notes && (\n                <p className=\"text-gray-400 text-sm mt-2 border-t border-gray-700 pt-2\">\n                  {candidature.notes}\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {filteredCandidatures.length === 0 && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-gray-400\">\n              {candidatures.length === 0 \n                ? \"Aucune candidature enregistrée.\"\n                : \"Aucune candidature ne correspond au filtre sélectionné.\"}\n            </p>\n          </div>\n        )}\n\n        {/* Section CV et Conversation */}\n        <div className=\"mt-12 grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Section Téléversement CV */}\n          <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700\">\n            <h3 className=\"text-xl font-semibold mb-4\">📄 CV pour {currentDossier?.nom}</h3>\n            <div className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-gray-600 rounded-lg p-6 text-center\">\n                <input\n                  type=\"file\"\n                  accept=\".pdf,.doc,.docx\"\n                  className=\"hidden\"\n                  id=\"cv-upload\"\n                  onChange={handleCvUpload}\n                />\n                <label\n                  htmlFor=\"cv-upload\"\n                  className=\"cursor-pointer block\"\n                >\n                  <div className=\"text-gray-400 mb-2\">\n                    <svg className=\"mx-auto h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                    </svg>\n                  </div>\n                  <p className=\"text-gray-300\">Cliquez pour sélectionner votre CV</p>\n                  <p className=\"text-gray-400 text-sm mt-1\">Formats acceptés: PDF, DOC, DOCX</p>\n                </label>\n              </div>\n              {cvFile && (\n                <div className=\"text-sm text-gray-300\">\n                  Fichier sélectionné : {cvFile.name}\n                </div>\n              )}\n              {cvError && (\n                <div className=\"text-sm text-red-400\">\n                  {cvError}\n                </div>\n              )}\n              {cvSuccess && (\n                <div className=\"text-sm text-green-400\">\n                  {cvSuccess}\n                </div>\n              )}\n              <button\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors disabled:opacity-50\"\n                onClick={uploadCv}\n                disabled={!cvFile || cvUploading}\n              >\n                {cvUploading ? 'Téléversement en cours...' : 'Téléverser CV'}\n              </button>\n\n              {/* Liste des CVs téléversés */}\n              {uploadedCvs.length > 0 && (\n                <div className=\"mt-6\">\n                  <h4 className=\"text-lg font-semibold mb-3\">CVs téléversés</h4>\n                  <div className=\"space-y-3\">\n                    {uploadedCvs.map((cv) => (\n                      <div key={cv.id} className=\"bg-gray-700 rounded-lg p-3 flex items-center justify-between\">\n                        <div className=\"flex-1\">\n                          <p className=\"text-sm font-medium\">{cv.file_name}</p>\n                          <p className=\"text-xs text-gray-400\">\n                            Téléversé le {new Date(cv.created_at).toLocaleDateString()}\n                          </p>\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <button\n                            onClick={() => handleDownloadCv(cv)}\n                            className=\"text-blue-400 hover:text-blue-300\"\n                            title=\"Télécharger\"\n                          >\n                            ⬇️\n                          </button>\n                          <button\n                            onClick={() => handleDeleteCv(cv.id, cv.file_path)}\n                            className=\"text-red-400 hover:text-red-300\"\n                            title=\"Supprimer\"\n                          >\n                            🗑️\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Section Conversation */}\n          <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700\">\n            <h3 className=\"text-xl font-semibold mb-4\">💬 Messages pour {currentDossier?.nom}</h3>\n            <div className=\"flex flex-col h-[600px] bg-gray-900 rounded-lg\">\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n                {messages.length === 0 ? (\n                  <div className=\"text-center text-gray-400 py-8\">\n                    <p>Aucun message</p>\n                    <p className=\"text-sm mt-2\">Envoyez un message pour commencer la conversation</p>\n                  </div>\n                ) : (\n                  messages.map((message) => {\n                    // Si le nom de l'utilisateur est 'Admin', afficher à gauche en gris\n                    // Sinon, afficher à droite en bleu\n                    const isMessageFromAdmin = message.user_name === 'Admin';\n\n                    return (\n                      <div\n                        key={message.id}\n                        className={`w-full flex ${isMessageFromAdmin ? 'justify-start' : 'justify-end'}`}\n                      >\n                        <div\n                          className={`max-w-[80%] p-4 rounded-lg ${\n                            isMessageFromAdmin\n                              ? 'bg-gray-700 text-white rounded-tl-none'\n                              : 'bg-blue-600 text-white rounded-tr-none'\n                          }`}\n                        >\n                          <p className=\"text-xs font-semibold mb-1\">\n                            {message.user_name || 'Admin'}\n                          </p>\n                          <p className=\"text-sm\">{message.message}</p>\n                          <p className=\"text-xs opacity-75 mt-2\">\n                            {new Date(message.created_at).toLocaleString()}\n                          </p>\n                        </div>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n              <div className=\"border-t border-gray-700 p-4\">\n                <form onSubmit={handleSendMessage} className=\"flex gap-2\">\n                  <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    placeholder=\"Écrivez votre message...\"\n                    className=\"flex-1 bg-gray-700 text-white rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors disabled:opacity-50\"\n                    disabled={!newMessage.trim()}\n                  >\n                    Envoyer\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <style jsx global>{`\n        @keyframes shine {\n          0% {\n            transform: translateX(-100%);\n          }\n          100% {\n            transform: translateX(100%);\n          }\n        }\n\n        .animate-shine {\n          animation: shine 2s infinite;\n        }\n      `}</style>\n\n      <style jsx>{`\n        .message-container {\n          display: flex;\n          width: 100%;\n          margin-bottom: 1rem;\n        }\n        .message-user {\n          justify-content: flex-end;\n        }\n        .message-admin {\n          justify-content: flex-start;\n        }\n        .message-bubble {\n          max-width: 80%;\n          padding: 1rem;\n          border-radius: 0.5rem;\n          box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n        }\n        .message-user-bubble {\n          background-color: #2563eb;\n          color: white;\n          border-top-right-radius: 0;\n        }\n        .message-admin-bubble {\n          background-color: #374151;\n          color: white;\n          border-top-left-radius: 0;\n        }\n        .message-bubble p {\n          margin: 0;\n          line-height: 1.5;\n        }\n        .message-bubble .timestamp {\n          font-size: 0.75rem;\n          opacity: 0.7;\n          margin-top: 0.5rem;\n        }\n      `}</style>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}