{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/OneDrive/Bureau/projet%20epsizone%20-%20Copie/projet-nabil-et-pedro-open-innov/src/lib/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://fbbsameldccmlnxpugpn.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZiYnNhbWVsZGNjbWxueHB1Z3BuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg5NDMyMTMsImV4cCI6MjA2NDUxOTIxM30.OLz7Xl3U41VA-jVXDwLDVOV0qG5ivwFcIF_uuCnL5M4';\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/OneDrive/Bureau/projet%20epsizone%20-%20Copie/projet-nabil-et-pedro-open-innov/src/app/dashboard/page.js"],"sourcesContent":["'use client';\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '../../lib/supabaseClient';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\n\nexport default function Dashboard() {\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userCount, setUserCount] = useState(0);\n  const [courseCount, setCourseCount] = useState(0);\n  const [videoCount, setVideoCount] = useState(0);\n  const [users, setUsers] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [dossiers, setDossiers] = useState([]);\n  const [candidatures, setCandidatures] = useState([]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [showAddUserTableForm, setShowAddUserTableForm] = useState(false);\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    router.push('/');\n  };\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (!storedUser) {\n      router.push('/');\n    } else {\n      const parsedUser = JSON.parse(storedUser);\n      setUser(parsedUser);\n\n      // Redirection des non-admins vers la page des cours\n      if (parsedUser.role !== 'admin') {\n        router.push('/cours');\n      } else {\n        fetchCounts();\n        fetchUsers();\n        fetchCourses();\n        fetchDossiersAndCandidatures();\n      }\n    }\n  }, []);\n\n  const fetchCounts = async () => {\n    const { count: userCount } = await supabase\n      .from('users')\n      .select('*', { count: 'exact', head: true });\n    const { count: courseCount } = await supabase\n      .from('cours')\n      .select('*', { count: 'exact', head: true });\n    const { count: videoCount } = await supabase\n      .from('videos')\n      .select('*', { count: 'exact', head: true });\n\n    if (userCount !== null) setUserCount(userCount);\n    if (courseCount !== null) setCourseCount(courseCount);\n    if (videoCount !== null) setVideoCount(videoCount);\n    setIsLoading(false);\n  };\n\n  const fetchUsers = async () => {\n    const { data, error } = await supabase.from('users').select('*');\n    if (!error && data) setUsers(data);\n  };\n\n  const fetchCourses = async () => {\n    const { data, error } = await supabase.from('cours').select('*');\n    if (!error && data) setCourses(data);\n  };\n\n  const fetchDossiersAndCandidatures = async () => {\n    // Récupérer les dossiers\n    const { data: dossiersData, error: dossiersError } = await supabase\n      .from('dossiers')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (!dossiersError && dossiersData) {\n      setDossiers(dossiersData);\n    }\n\n    // Récupérer les candidatures\n    const { data: candidaturesData, error: candidaturesError } = await supabase\n      .from('candidatures')\n      .select(`\n        *,\n        dossiers (\n          nom\n        )\n      `)\n      .order('date_candidature', { ascending: false });\n\n    if (!candidaturesError && candidaturesData) {\n      setCandidatures(candidaturesData);\n    }\n  };\n\n  // Générer les stats par mois à partir des candidatures et utilisateurs\n  function getMonthlyStats(items, dateField) {\n    const stats = {};\n    items.forEach(item => {\n      const date = new Date(item[dateField]);\n      if (isNaN(date)) return;\n      const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      stats[key] = (stats[key] || 0) + 1;\n    });\n    return stats;\n  }\n\n  // Générer les labels (mois) sur la période couverte\n  function getLabels(stats1, stats2) {\n    const allKeys = new Set([...Object.keys(stats1), ...Object.keys(stats2)]);\n    const sorted = Array.from(allKeys).sort();\n    return sorted;\n  }\n\n  // Calculer les stats\n  const candidatureStats = getMonthlyStats(candidatures, 'date_candidature');\n  const userStats = getMonthlyStats(users, 'created_at');\n  const labels = getLabels(candidatureStats, userStats);\n\n  // Générer les datasets dynamiquement\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Candidatures',\n        data: labels.map(l => candidatureStats[l] || 0),\n        fill: true,\n        backgroundColor: 'rgba(46, 196, 182, 0.1)',\n        borderColor: 'rgba(46, 196, 182, 1)',\n        tension: 0.4,\n        pointRadius: 3,\n      },\n      {\n        label: 'Utilisateurs',\n        data: labels.map(l => userStats[l] || 0),\n        fill: true,\n        backgroundColor: 'rgba(61, 169, 252, 0.1)',\n        borderColor: 'rgba(61, 169, 252, 1)',\n        tension: 0.4,\n        pointRadius: 3,\n      },\n    ],\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n        labels: { color: '#232946', font: { size: 14, weight: 'bold' } }\n      },\n      title: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        grid: { color: '#eaeaea' },\n        ticks: { color: '#232946', font: { size: 13 } }\n      },\n      y: {\n        grid: { color: '#eaeaea' },\n        ticks: { color: '#232946', font: { size: 13 } }\n      },\n    },\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[var(--background)] flex\">\n      {/* Removed Sidebar */}\n      <div className=\"flex-1 min-h-screen flex flex-col\">\n        {/* Removed DashboardHeader */}\n        <div className=\"flex flex-1 gap-8 p-8 max-w-[1600px] mx-auto\">\n          {/* Main content */}\n          <main className=\"flex-1\">\n            {/* Cartes de stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-10\">\n              <div className=\"rounded-2xl shadow-lg p-8 text-center bg-white border border-[var(--primary)]\">\n                <div className=\"flex items-center justify-center mb-3\">\n                  <span className=\"inline-block bg-[var(--accent)] text-white rounded-full p-3 text-3xl shadow\">👤</span>\n                </div>\n                <p className=\"text-5xl font-extrabold mb-2 text-[var(--primary)]\">{userCount}</p>\n                <p className=\"text-lg font-semibold text-gray-500\">Utilisateurs</p>\n              </div>\n              <div className=\"rounded-2xl shadow-lg p-8 text-center bg-white border border-[var(--primary)]\">\n                <div className=\"flex items-center justify-center mb-3\">\n                  <span className=\"inline-block bg-purple-500 text-white rounded-full p-3 text-3xl shadow\">📚</span>\n                </div>\n                <p className=\"text-5xl font-extrabold mb-2 text-[var(--primary)]\">{courseCount}</p>\n                <p className=\"text-lg font-semibold text-gray-500\">Cours</p>\n              </div>\n              <div className=\"rounded-2xl shadow-lg p-8 text-center bg-white border border-[var(--primary)]\">\n                <div className=\"flex items-center justify-center mb-3\">\n                  <span className=\"inline-block bg-green-500 text-white rounded-full p-3 text-3xl shadow\">🎬</span>\n                </div>\n                <p className=\"text-5xl font-extrabold mb-2 text-[var(--primary)]\">1000</p>\n                <p className=\"text-lg font-semibold text-gray-500\">Vidéos</p>\n              </div>\n            </div>\n            {/* Section Statistics (graphique) */}\n            <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-10 border border-[var(--primary)] min-h-[320px] flex flex-col items-center justify-center\">\n              <h3 className=\"text-xl font-bold mb-4 text-[var(--primary)]\">Statistics</h3>\n              <div className=\"w-full h-56 flex items-center justify-center\">\n                <Line data={chartData} options={chartOptions} />\n              </div>\n            </div>\n            {/* TABLES (Utilisateurs, Cours, Dossiers, Candidatures) */}\n            <div className=\"space-y-12\">\n              {/* Cours - courbe d'évolution */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-8 mb-10 border border-[var(--primary)] min-h-[320px] flex flex-col items-center justify-center\">\n                <h3 className=\"text-xl font-bold mb-4 text-[var(--primary)]\">Évolution des cours 📚</h3>\n                <div className=\"w-full h-56 flex items-center justify-center\">\n                  <Line data={getCoursesChartData(courses)} options={chartOptions} />\n                </div>\n              </div>\n              {/* Dossiers */}\n              <div>\n                <a href=\"/dossiers\" className=\"block\">\n                  <h3 className=\"text-2xl font-bold mb-6 text-center text-[var(--primary)] flex items-center justify-center gap-2\">\n                    <span>Dossiers</span> <span className=\"text-2xl\">📁</span>\n                  </h3>\n                </a>\n                <div className=\"overflow-x-auto rounded-2xl shadow-xl bg-white border border-[var(--primary)]\">\n                  <table className=\"w-full text-sm text-left\">\n                    <thead className=\"bg-[var(--primary)] text-white sticky top-0 z-10\">\n                      <tr>\n                        <th className=\"px-6 py-3\">ID</th>\n                        <th className=\"px-6 py-3\">Nom</th>\n                        <th className=\"px-6 py-3\">Date de création</th>\n                        <th className=\"px-6 py-3\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {dossiers.map((dossier, idx) => (\n                        <tr key={dossier.id} className={idx % 2 === 0 ? 'bg-gray-50' : 'bg-gray-100'}>\n                          <td className=\"px-6 py-4 break-all\">{dossier.id}</td>\n                          <td className=\"px-6 py-4\">{dossier.nom}</td>\n                          <td className=\"px-6 py-4\">{new Date(dossier.created_at).toLocaleDateString()}</td>\n                          <td className=\"px-6 py-4\">\n                            <button\n                              onClick={() => router.push(`/mes-candidatures?dossier_id=${dossier.id}`)}\n                              className=\"text-[var(--accent)] hover:text-[var(--primary)] font-bold underline\"\n                            >\n                              Voir les candidatures\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              {/* Candidatures */}\n              <div>\n                <a href=\"/mes-candidatures\" className=\"block\">\n                  <h3 className=\"text-2xl font-bold mb-6 text-center text-[var(--primary)] flex items-center justify-center gap-2\">\n                    <span>Candidatures</span> <span className=\"text-2xl\">📝</span>\n                  </h3>\n                </a>\n                <div className=\"overflow-x-auto rounded-2xl shadow-xl bg-white border border-[var(--primary)]\">\n                  <table className=\"w-full text-sm text-left\">\n                    <thead className=\"bg-[var(--primary)] text-white sticky top-0 z-10\">\n                      <tr>\n                        <th className=\"px-6 py-3\">ID</th>\n                        <th className=\"px-6 py-3\">Entreprise</th>\n                        <th className=\"px-6 py-3\">Poste</th>\n                        <th className=\"px-6 py-3\">Dossier</th>\n                        <th className=\"px-6 py-3\">Date</th>\n                        <th className=\"px-6 py-3\">Statut</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {candidatures.map((candidature, idx) => (\n                        <tr key={candidature.id} className={idx % 2 === 0 ? 'bg-gray-50' : 'bg-gray-100'}>\n                          <td className=\"px-6 py-4 break-all\">{candidature.id}</td>\n                          <td className=\"px-6 py-4\">{candidature.entreprise}</td>\n                          <td className=\"px-6 py-4\">{candidature.poste}</td>\n                          <td className=\"px-6 py-4\">{candidature.dossiers?.nom}</td>\n                          <td className=\"px-6 py-4\">{new Date(candidature.date_candidature).toLocaleDateString()}</td>\n                          <td className=\"px-6 py-4\">\n                            <span className={`inline-block px-3 py-1 rounded-full text-xs font-bold ${\n                              candidature.statut === 'Accepté' ? 'bg-green-100 text-green-700' :\n                              candidature.statut === 'Refusé' ? 'bg-red-100 text-red-700' :\n                              candidature.statut === 'Entretien' ? 'bg-yellow-100 text-yellow-700' :\n                              'bg-gray-200 text-gray-700'\n                            }`}>\n                              {candidature.statut}\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </main>\n          {/* Right panel (placeholders) */}\n          <aside className=\"w-[350px] hidden xl:block flex-shrink-0\">\n            <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8 border border-gray-100\">\n              <h3 className=\"text-lg font-bold mb-3 text-[var(--primary)] flex items-center gap-2\"><span>⭐ Admins</span></h3>\n              <p className=\"text-gray-500 mb-4 text-sm\">Liste des administrateurs de la plateforme</p>\n              <div className=\"flex -space-x-3\">\n                {users.filter(u => u.role === 'admin').slice(0, 5).map((admin, idx) => (\n                  <div key={admin.id} className=\"w-10 h-10 rounded-full border-2 border-white bg-gray-200 inline-flex items-center justify-center text-lg relative group cursor-pointer\" title={admin.name + ' (' + admin.email + ')'}>\n                    <span>{admin.name ? admin.name.charAt(0).toUpperCase() : 'A'}</span>\n                    <div className=\"absolute left-1/2 -translate-x-1/2 top-12 bg-white text-gray-700 text-xs rounded shadow-lg px-3 py-1 opacity-0 group-hover:opacity-100 pointer-events-none z-20 whitespace-nowrap\">\n                      {admin.name}<br/>{admin.email}\n                    </div>\n                  </div>\n                ))}\n                {users.filter(u => u.role === 'admin').length > 5 && (\n                  <span className=\"ml-4 text-gray-400 text-sm font-bold\">+{users.filter(u => u.role === 'admin').length - 5}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-100\">\n              <h3 className=\"text-lg font-bold mb-3 text-[var(--primary)] flex items-center gap-2\"><span>Dernières inscriptions</span></h3>\n              <ul className=\"divide-y divide-gray-100\">\n                {users\n                  .slice()\n                  .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\n                  .map((u) => (\n                    <li key={u.id} className=\"flex items-center gap-4 py-3\">\n                      <div className=\"w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center text-lg\">🧑‍💼</div>\n                      <div className=\"flex-1\">\n                        <div className=\"font-bold text-gray-700\">{u.name}</div>\n                        <div className=\"text-gray-500 text-sm\">{u.email}</div>\n                      </div>\n                      <div className=\"text-gray-400 text-xs\">{new Date(u.created_at).toLocaleDateString()}</div>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </aside>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction AddUserTableForm({ onUserAdded }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('user');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    setLoading(true);\n    if (!name || !email || !role || !password) {\n      setError('Tous les champs sont obligatoires.');\n      setLoading(false);\n      return;\n    }\n    // Vérifie si l'email existe déjà\n    const { data: existing, error: checkError } = await supabase.from('users').select('*').eq('email', email);\n    if (existing && existing.length > 0) {\n      setError('Cet email existe déjà.');\n      setLoading(false);\n      return;\n    }\n    // Ajoute l'utilisateur dans la table users\n    const { error: insertError } = await supabase.from('users').insert([\n      { name, email, role, password }\n    ]);\n    if (insertError) {\n      setError(`Erreur lors de l'ajout : ${insertError.message}`);\n    } else {\n      setMessage('Utilisateur ajouté !');\n      setName(''); setEmail(''); setRole('user'); setPassword('');\n      if (typeof onUserAdded === 'function') onUserAdded();\n    }\n    setLoading(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"flex flex-col gap-3\">\n      <input type=\"text\" placeholder=\"Nom\" value={name} onChange={e => setName(e.target.value)} className=\"rounded p-2 bg-gray-900 border border-gray-700 text-white\" required />\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} className=\"rounded p-2 bg-gray-900 border border-gray-700 text-white\" required />\n      <select value={role} onChange={e => setRole(e.target.value)} className=\"rounded p-2 bg-gray-900 border border-gray-700 text-white\" required>\n        <option value=\"user\">Utilisateur</option>\n        <option value=\"admin\">Admin</option>\n      </select>\n      <input type=\"password\" placeholder=\"Mot de passe\" value={password} onChange={e => setPassword(e.target.value)} className=\"rounded p-2 bg-gray-900 border border-gray-700 text-white\" required />\n      <button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 rounded-lg mt-2\" disabled={loading}>\n        {loading ? 'Ajout...' : 'Ajouter'}\n      </button>\n      {message && <div className=\"text-green-400 font-bold text-center\">{message}</div>}\n      {error && <div className=\"text-red-400 font-bold text-center\">{error}</div>}\n    </form>\n  );\n}\n\nfunction getCoursesChartData(courses) {\n  // Générer les stats par mois à partir des cours\n  const stats = {};\n  courses.forEach(course => {\n    const date = new Date(course.created_at);\n    if (isNaN(date)) return;\n    const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    stats[key] = (stats[key] || 0) + 1;\n  });\n  const labels = Object.keys(stats).sort();\n  // Dégradé pour Chart.js (utilise le contexte du canvas)\n  // On utilise une couleur moderne (bleu-violet)\n  return {\n    labels,\n    datasets: [\n      {\n        label: 'Cours créés',\n        data: labels.map(l => stats[l] || 0),\n        fill: true,\n        backgroundColor: function(context) {\n          const chart = context.chart;\n          const {ctx, chartArea} = chart;\n          if (!chartArea) return 'rgba(99, 102, 241, 0.1)'; // fallback\n          const gradient = ctx.createLinearGradient(0, chartArea.top, 0, chartArea.bottom);\n          gradient.addColorStop(0, 'rgba(99, 102, 241, 0.25)'); // Indigo-500\n          gradient.addColorStop(1, 'rgba(139, 92, 246, 0.05)'); // Violet-500\n          return gradient;\n        },\n        borderColor: 'rgba(99, 102, 241, 1)', // Indigo-500\n        borderWidth: 4,\n        tension: 0.5,\n        pointRadius: 6,\n        pointBackgroundColor: 'rgba(99, 102, 241, 1)',\n        pointBorderColor: '#fff',\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        pointHoverBackgroundColor: 'rgba(139, 92, 246, 1)', // Violet-500\n        shadowOffsetX: 0,\n        shadowOffsetY: 4,\n        shadowBlur: 8,\n        shadowColor: 'rgba(99, 102, 241, 0.2)',\n      },\n    ],\n  };\n}"],"names":[],"mappings":"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","debugId":null}}]
}