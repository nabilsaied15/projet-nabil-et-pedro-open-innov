{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/OneDrive/Bureau/projet%20epsizone%20-%20Copie/projet-nabil-et-pedro-open-innov/src/lib/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://fbbsameldccmlnxpugpn.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZiYnNhbWVsZGNjbWxueHB1Z3BuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg5NDMyMTMsImV4cCI6MjA2NDUxOTIxM30.OLz7Xl3U41VA-jVXDwLDVOV0qG5ivwFcIF_uuCnL5M4';\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAEjB,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/nabil/OneDrive/Bureau/projet%20epsizone%20-%20Copie/projet-nabil-et-pedro-open-innov/src/app/contacts/page.js"],"sourcesContent":["'use client';\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { supabase } from '@/lib/supabaseClient';\r\n\r\nconst initialContacts = [\r\n  { id: 1, name: 'Alice Martin', company: 'Capgemini', email: 'alice.martin@capgemini.com', phone: '06 12 34 56 78' },\r\n  { id: 2, name: 'Jean Dupont', company: 'Google', email: 'jean.dupont@google.com', phone: '07 98 76 54 32' },\r\n  { id: 3, name: 'Sophie Bernard', company: 'Microsoft', email: 'sophie.bernard@microsoft.com', phone: '06 22 33 44 55' },\r\n  { id: 4, name: 'Karim Benali', company: 'Amazon', email: 'karim.benali@amazon.com', phone: '06 44 55 66 77' },\r\n];\r\n\r\nfunction getInitials(name) {\r\n  return name.split(' ').map(n => n[0]).join('').toUpperCase();\r\n}\r\n\r\nfunction getMonthDays(year, month) {\r\n  const days = [];\r\n  const date = new Date(year, month, 1);\r\n  while (date.getMonth() === month) {\r\n    days.push(new Date(date));\r\n    date.setDate(date.getDate() + 1);\r\n  }\r\n  return days;\r\n}\r\n\r\nfunction isAvailable(date) {\r\n  const day = date.getDay();\r\n  // Samedi (6) ou dimanche (0) => indisponible\r\n  if (day === 0 || day === 6) return false;\r\n  return true;\r\n}\r\n\r\nfunction CalendarModal({ open, onClose, contact, onConfirmRdv, rdvs, setRdvs, userName, indispos, setIndispos, dispos, setDispos }) {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [selectedHour, setSelectedHour] = useState(null);\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const [rdvPrisPopup, setRdvPrisPopup] = useState(false);\r\n  const year = currentMonth.getFullYear();\r\n  const month = currentMonth.getMonth();\r\n  const days = getMonthDays(year, month);\r\n  const firstDay = new Date(year, month, 1).getDay();\r\n\r\n  const morningHours = [9, 10, 11, 12, 13];\r\n  const afternoonHours = [14, 15, 16, 17, 18];\r\n\r\n  // Liste des horaires déjà pris pour ce contact et cette date\r\n  const takenHours = selectedDate\r\n    ? rdvs\r\n        .filter(\r\n          rdv =>\r\n            rdv.contactId === contact.id &&\r\n            rdv.date === selectedDate.toISOString().split('T')[0]\r\n        )\r\n        .map(rdv => rdv.hour)\r\n    : [];\r\n\r\n  const handleValidate = async () => {\r\n    if (!selectedDate || !selectedHour) return;\r\n\r\n    // Vérification côté client (optionnel mais rapide)\r\n    const isAlreadyTaken = rdvs.some(\r\n      r =>\r\n        r.contactId === contact.id &&\r\n        r.date === selectedDate.toISOString().split('T')[0] &&\r\n        r.hour === selectedHour\r\n    );\r\n    if (isAlreadyTaken) {\r\n      setRdvPrisPopup(true);\r\n      return;\r\n    }\r\n\r\n    // Vérification côté base (pour éviter les collisions si plusieurs utilisateurs cliquent en même temps)\r\n    const { data: existing, error: checkError } = await supabase\r\n      .from('rdvs2')\r\n      .select('*')\r\n      .eq('contactId', contact.id)\r\n      .eq('date', selectedDate.toISOString().split('T')[0])\r\n      .eq('hour', selectedHour);\r\n\r\n    if (existing && existing.length > 0) {\r\n      alert('Ce créneau est déjà réservé !');\r\n      return;\r\n    }\r\n\r\n    // Récupère l'utilisateur courant\r\n    const user = typeof window !== 'undefined' && localStorage.getItem('user')\r\n      ? JSON.parse(localStorage.getItem('user'))\r\n      : null;\r\n    const userEmail = user?.email || '';\r\n\r\n    // Prépare le RDV à insérer\r\n    const { data, error } = await supabase.from('rdvs2').insert([{\r\n      contactId: contact.id,\r\n      contactName: contact.name,\r\n      date: selectedDate.toISOString().split('T')[0],\r\n      hour: selectedHour,\r\n      userName: userName,\r\n      userEmail: userEmail,\r\n      motif_id: selectedMotifId,\r\n      motif_custom: motifs.find(m => m.id == selectedMotifId)?.label === 'Autre' ? customMotif : null\r\n    }]);\r\n    if (error) {\r\n      alert('Erreur lors de la prise de RDV : ' + error.message);\r\n      return;\r\n    }\r\n\r\n    if (Array.isArray(data) && data.length > 0) {\r\n      setRdvs(prev => [...prev, ...data]);\r\n    }\r\n\r\n    // Recharge la liste\r\n    const { data: newRdvs } = await supabase.from('rdvs2').select('*');\r\n    setRdvs(newRdvs || []);\r\n\r\n    // Affiche le message de confirmation\r\n    setConfirmed(true);\r\n    setTimeout(() => {\r\n      setConfirmed(false);\r\n      onClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const handleDeleteRdv = async (id) => {\r\n    await supabase.from('rdvs2').delete().eq('id', id);\r\n    // Recharge la liste des RDV\r\n    const { data, error } = await supabase.from('rdvs2').select('*');\r\n    if (!error && Array.isArray(data)) setRdvs(data);\r\n  };\r\n\r\n  const handleDateContextMenu = (date, e) => {\r\n    e.preventDefault();\r\n    const key = `${contact.id}_${date.toISOString().split('T')[0]}`;\r\n    setIndispos(prev => ({ ...prev, [key]: !prev[key] }));\r\n  };\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50\">\r\n      <div className=\"rounded-2xl p-8 shadow-xl w-full max-w-md relative\">\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute -top-5 right-4 button text-4xl w-12 h-12 flex items-center justify-center rounded-full shadow-lg transition-all border-4\"\r\n          aria-label=\"Fermer\"\r\n        >\r\n          ×\r\n        </button>\r\n        <h2 className=\"text-xl font-bold mb-4 text-center\">Prendre un RDV avec {contact.name}</h2>\r\n        {confirmed && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center z-50\">\r\n            <div className=\"px-8 py-6 rounded-xl shadow-lg text-center\">\r\n              <div className=\"text-3xl mb-2\">✔</div>\r\n              <div className=\"text-lg font-bold\">RDV confirmé !</div>\r\n              <div className=\"text-sm mt-2\">Votre rendez-vous a bien été enregistré.</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {rdvPrisPopup && (\r\n          <div className=\"fixed inset-0 flex items-center justify-center z-50\">\r\n            <div className=\"px-8 py-6 rounded-xl shadow-lg text-center\">\r\n              <div className=\"text-3xl mb-2\">⛔</div>\r\n              <div className=\"text-lg font-bold\">Ce créneau est déjà pris !</div>\r\n              <button\r\n                className=\"mt-4 px-4 py-2 rounded font-bold\"\r\n                onClick={() => setRdvPrisPopup(false)}\r\n              >\r\n                Fermer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <button onClick={() => { setCurrentMonth(new Date(year, month - 1, 1)); setSelectedDate(null); setSelectedHour(null); }} className=\"text-red-400 px-2 py-1 rounded hover:bg-gray-800\">◀</button>\r\n          <span className=\"font-semibold\">{currentMonth.toLocaleString('fr-FR', { month: 'long', year: 'numeric' })}</span>\r\n          <button onClick={() => { setCurrentMonth(new Date(year, month + 1, 1)); setSelectedDate(null); setSelectedHour(null); }} className=\"text-red-400 px-2 py-1 rounded hover:bg-gray-800\">▶</button>\r\n        </div>\r\n        <div className=\"grid grid-cols-7 gap-2 mb-2 text-center text-gray-400 text-xs\">\r\n          <div>Lun</div><div>Mar</div><div>Mer</div><div>Jeu</div><div>Ven</div><div className=\"text-red-400\">Sam</div><div className=\"text-red-400\">Dim</div>\r\n        </div>\r\n        <div className=\"grid grid-cols-7 gap-2 mb-4\">\r\n          {Array(firstDay === 0 ? 6 : firstDay - 1).fill(null).map((_, i) => (\r\n            <div key={i}></div>\r\n          ))}\r\n          {days.map(date => {\r\n            const available = isAvailable(date);\r\n            const key = `${contact.id}_${date.toISOString().split('T')[0]}`;\r\n            const isIndispo = indispos[key];\r\n            const isDispo = dispos[key];\r\n            let btnClass = '';\r\n            if (isIndispo) {\r\n              btnClass = 'cursor-not-allowed';\r\n            } else if (!available && (date.getDay() === 6 || date.getDay() === 0)) {\r\n              btnClass = 'cursor-not-allowed';\r\n            } else if (available && isDispo) {\r\n              btnClass = '';\r\n            } else if (available) {\r\n              btnClass = '';\r\n            } else {\r\n              btnClass = 'cursor-not-allowed';\r\n            }\r\n            const isSelected = selectedDate && date.toDateString() === selectedDate.toDateString();\r\n            return (\r\n              <button\r\n                key={date.toISOString()}\r\n                disabled={!available || isIndispo}\r\n                className={`rounded-lg py-2 text-sm font-semibold transition w-full ${btnClass} ${isSelected ? 'ring-2 ring-yellow-400' : ''}`}\r\n                onClick={() => {\r\n                  setSelectedDate(date);\r\n                  setSelectedHour(null);\r\n                }}\r\n                onContextMenu={e => handleDateContextMenu(date, e)}\r\n                title={isIndispo ? 'Indisponible' : 'Clic droit pour marquer comme indisponible'}\r\n              >\r\n                {date.getDate()}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n        {selectedDate && selectedDate.getDay() !== 0 && selectedDate.getDay() !== 6 && (\r\n          <div className=\"mt-4\">\r\n            <div className=\"text-center font-semibold mb-2\">Choisissez un horaire pour le {selectedDate.toLocaleDateString('fr-FR')}</div>\r\n            <div className=\"mb-2 text-sm text-gray-400\">Matin</div>\r\n            <div className=\"flex flex-wrap gap-2 mb-4 justify-center\">\r\n              {morningHours\r\n                .filter(h => !takenHours.includes(h))\r\n                .map(h => (\r\n                  <button\r\n                    key={h}\r\n                    className={`px-3 py-2 rounded-lg font-semibold text-sm transition shadow\r\n                      ${selectedHour === h\r\n                        ? 'bg-yellow-400 text-black ring-2 ring-yellow-600'\r\n                        : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                      }`}\r\n                    onClick={() => setSelectedHour(h)}\r\n                  >\r\n                    {h}h00\r\n                  </button>\r\n                ))}\r\n            </div>\r\n            <div className=\"mb-2 text-sm text-gray-400\">Après-midi</div>\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n              {afternoonHours\r\n                .filter(h => !takenHours.includes(h))\r\n                .map(h => (\r\n                  <button\r\n                    key={h}\r\n                    className={`px-3 py-2 rounded-lg font-semibold text-sm transition shadow\r\n                      ${selectedHour === h\r\n                        ? 'bg-yellow-400 text-black ring-2 ring-yellow-600'\r\n                        : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                      }`}\r\n                    onClick={() => setSelectedHour(h)}\r\n                  >\r\n                    {h}h00\r\n                  </button>\r\n                ))}\r\n            </div>\r\n            {selectedHour && (\r\n              <button\r\n                className=\"mt-6 w-full font-bold py-3 rounded-lg shadow-lg transition\"\r\n                onClick={handleValidate}\r\n              >\r\n                Confirmer\r\n              </button>\r\n            )}\r\n          </div>\r\n        )}\r\n        {selectedDate && (selectedDate.getDay() === 0 || selectedDate.getDay() === 6) && (\r\n          <div className=\"mt-4 text-center text-red-400 font-semibold text-lg\">On ne travaille pas, c'est le weekend !</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ContactModal({ open, onClose, onSave, initial, loading }) {\r\n  const [form, setForm] = useState(\r\n    initial || { name: \"\", company: \"\", email: \"\", phone: \"\", photo_url: \"\", role: \"\" }\r\n  );\r\n  const [file, setFile] = useState(null);\r\n  useEffect(() => {\r\n    setForm(initial || { name: \"\", company: \"\", email: \"\", phone: \"\", photo_url: \"\", role: \"\" });\r\n    setFile(null);\r\n  }, [initial, open]);\r\n  if (!open) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80\">\r\n      <div className=\"relative bg-white p-8 rounded-3xl shadow-2xl w-full max-w-md mx-4 transition-all duration-300 border-2 border-blue-100\">\r\n        <button\r\n          className=\"absolute top-3 right-3 text-2xl font-bold text-blue-400 hover:text-blue-700 transition\"\r\n          type=\"button\"\r\n          onClick={onClose}\r\n          aria-label=\"Fermer\"\r\n        >\r\n          ×\r\n        </button>\r\n        <h2 className=\"text-xl font-bold text-blue-900 text-center mb-4\">{initial ? \"Modifier le contact\" : \"Ajouter un contact\"}</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nom\"\r\n          value={form.name}\r\n          onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n          className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Entreprise\"\r\n          value={form.company}\r\n          onChange={(e) => setForm({ ...form, company: e.target.value })}\r\n          className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rôle (ex: RH, Manager, Candidat...)\"\r\n          value={form.role}\r\n          onChange={(e) => setForm({ ...form, role: e.target.value })}\r\n          className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n          className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Téléphone\"\r\n          value={form.phone}\r\n          onChange={(e) => setForm({ ...form, phone: e.target.value })}\r\n          className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\"\r\n          required\r\n        />\r\n        <div className=\"mb-4\">\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/png, image/jpeg\"\r\n            onChange={e => setFile(e.target.files[0])}\r\n            className=\"block w-full text-sm text-gray-300 file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\r\n          />\r\n          <div className=\"text-xs text-gray-400 mt-1\">Photo (jpg/png, max 2Mo)</div>\r\n          {form.photo_url && !file && (\r\n            <img src={form.photo_url} alt=\"Photo\" className=\"mt-2 w-20 h-20 object-cover rounded-full mx-auto\" />\r\n          )}\r\n          {file && (\r\n            <div className=\"mt-2 text-xs text-blue-400\">{file.name}</div>\r\n          )}\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 rounded-lg shadow-lg transition mb-2\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Enregistrement...\" : initial ? \"Enregistrer\" : \"Ajouter\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ConfirmModal({ open, onClose, onConfirm, text, loading }) {\r\n  if (!open) return null;\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center z-50\">\r\n      <div className=\"rounded-2xl p-8 shadow-xl w-full max-w-md relative\">\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute -top-5 right-4 button text-4xl w-12 h-12 flex items-center justify-center rounded-full shadow-lg border-4\"\r\n        >\r\n          ×\r\n        </button>\r\n        <div className=\"text-lg mb-6\">{text}</div>\r\n        <div className=\"flex gap-4 justify-end\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 rounded\"\r\n            disabled={loading}\r\n          >\r\n            Annuler\r\n          </button>\r\n          <button\r\n            onClick={onConfirm}\r\n            className=\"px-4 py-2 rounded\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Suppression...\" : \"Supprimer\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DAYS = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\r\nconst HOURS = [9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\r\n\r\nexport default function ContactsPage() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [form, setForm] = useState({ name: '', company: '', email: '', phone: '', role: '', photo_url: '' });\r\n  const [file, setFile] = useState(null);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAvailabilityModal, setShowAvailabilityModal] = useState(false);\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const [availabilityMap, setAvailabilityMap] = useState({}); // { contactId: { day: { hour: true/false } } }\r\n  const [availability, setAvailability] = useState({}); // { day: { hour: true/false } }\r\n  const [showAvailabilityTextModal, setShowAvailabilityTextModal] = useState(false);\r\n  const [availabilityTextContact, setAvailabilityTextContact] = useState(null);\r\n  const [showRdvModal, setShowRdvModal] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [rdvContact, setRdvContact] = useState(null);\r\n  const [rdvUser, setRdvUser] = useState(null);\r\n  const [rdvDate, setRdvDate] = useState('');\r\n  const [rdvHour, setRdvHour] = useState('');\r\n  const [rdvSearchContact, setRdvSearchContact] = useState('');\r\n  const [rdvSearchUser, setRdvSearchUser] = useState('');\r\n  const [rdvError, setRdvError] = useState('');\r\n  const [rdvConfirmed, setRdvConfirmed] = useState(false);\r\n  const hoursList = [9,10,11,12,13,14,15,16,17,18];\r\n  const [rdvs, setRdvs] = useState([]);\r\n  const [filterContact, setFilterContact] = useState('');\r\n  const [filterUser, setFilterUser] = useState('');\r\n  const [motifs, setMotifs] = useState([]);\r\n  const [selectedMotifId, setSelectedMotifId] = useState('');\r\n  const [customMotif, setCustomMotif] = useState('');\r\n\r\n  // Charger les disponibilités depuis la base au démarrage\r\n  useEffect(() => {\r\n    async function fetchDisponibilites() {\r\n      const { data, error } = await supabase.from('disponibilites').select('*');\r\n      if (!error && data) {\r\n        // Transforme les données en availabilityMap { contactId: { day: { hour: true } } }\r\n        const map = {};\r\n        data.forEach(d => {\r\n          if (!map[d.contact_id]) map[d.contact_id] = {};\r\n          if (!map[d.contact_id][d.day]) map[d.contact_id][d.day] = {};\r\n          map[d.contact_id][d.day][d.hour] = d.disponible;\r\n        });\r\n        setAvailabilityMap(map);\r\n      }\r\n    }\r\n    fetchDisponibilites();\r\n  }, []);\r\n\r\n  // Charger les contacts\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch users (étudiants)\r\n    async function fetchUsers() {\r\n      const { data, error } = await supabase.from('users').select('*');\r\n      if (!error && data) setUsers(data);\r\n    }\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchRdvs() {\r\n      const { data, error } = await supabase.from('rdvs2').select('*');\r\n      if (!error && data) setRdvs(data);\r\n    }\r\n    fetchRdvs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchMotifs() {\r\n      const { data, error } = await supabase.from('motifs').select('*');\r\n      if (!error && data) setMotifs(data);\r\n    }\r\n    fetchMotifs();\r\n  }, []);\r\n\r\n  async function fetchContacts() {\r\n    setLoading(true);\r\n    const { data, error } = await supabase.from('contacts').select('*').order('id', { ascending: false });\r\n    if (error) setError(\"Erreur chargement : \" + error.message);\r\n    else setContacts(data || []);\r\n    setLoading(false);\r\n  }\r\n\r\n  // Ajout ou modification\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setError('');\r\n    setMessage('');\r\n    setLoading(true);\r\n\r\n    let photo_url = form.photo_url;\r\n    if (file) {\r\n      const ext = file.name.split('.').pop();\r\n      const fileName = `contact_${Date.now()}.${ext}`;\r\n      const { error: uploadError } = await supabase.storage.from('contacts').upload(fileName, file, { upsert: true });\r\n      if (uploadError) {\r\n        setError(\"Erreur upload photo : \" + uploadError.message);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const { data: publicUrlData } = supabase.storage.from('contacts').getPublicUrl(fileName);\r\n      photo_url = publicUrlData.publicUrl;\r\n    }\r\n\r\n    if (editingId) {\r\n      // Update\r\n      const { error } = await supabase.from('contacts').update({ ...form, photo_url }).eq('id', editingId);\r\n      if (error) setError(\"Erreur modification : \" + error.message);\r\n      else {\r\n        setMessage(\"Contact modifié !\");\r\n        // Affiche la pop-up et recharge la page après 1 seconde\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      // Insert\r\n      const { error } = await supabase.from('contacts').insert([{ ...form, photo_url }]);\r\n      if (error) setError(\"Erreur ajout : \" + error.message);\r\n      else {\r\n        setMessage(\"Contact ajouté !\");\r\n        setShowForm(false); // Ferme le formulaire après ajout\r\n      }\r\n    }\r\n    setForm({ name: '', company: '', email: '', phone: '', role: '', photo_url: '' });\r\n    setFile(null);\r\n    setEditingId(null);\r\n    fetchContacts();\r\n    setLoading(false);\r\n  }\r\n\r\n  function handleEdit(contact) {\r\n    setForm(contact);\r\n    setEditingId(contact.id);\r\n    setMessage('');\r\n    setError('');\r\n    setFile(null);\r\n    setShowForm(true);\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n    if (!window.confirm('Supprimer ce contact ?')) return;\r\n    setLoading(true);\r\n    const { error } = await supabase.from('contacts').delete().eq('id', id);\r\n    if (error) setError(\"Erreur suppression : \" + error.message);\r\n    else setMessage(\"Contact supprimé !\");\r\n    fetchContacts();\r\n    setLoading(false);\r\n  }\r\n\r\n  function openAvailabilityModal(contact) {\r\n    setSelectedContact(contact);\r\n    setShowAvailabilityModal(true);\r\n    // Charger la disponibilité sauvegardée pour ce contact\r\n    setAvailability(availabilityMap[contact.id] || {});\r\n  }\r\n  function closeAvailabilityModal() {\r\n    setShowAvailabilityModal(false);\r\n    setSelectedContact(null);\r\n    setAvailability({});\r\n  }\r\n  function toggleAvailability(day, hour) {\r\n    setAvailability(prev => ({\r\n      ...prev,\r\n      [day]: {\r\n        ...prev[day],\r\n        [hour]: !prev[day]?.[hour]\r\n      }\r\n    }));\r\n  }\r\n  async function handleSaveAvailability() {\r\n    if (selectedContact) {\r\n      // Pour chaque case cochée, insère ou met à jour la disponibilité en base\r\n      const updates = [];\r\n      for (const day of Object.keys(availability)) {\r\n        for (const hour of Object.keys(availability[day])) {\r\n          const disponible = !!availability[day][hour];\r\n          updates.push({\r\n            contact_id: selectedContact.id,\r\n            day,\r\n            hour: parseInt(hour, 10),\r\n            disponible\r\n          });\r\n        }\r\n      }\r\n      // Supprime les anciennes dispos pour ce contact\r\n      await supabase.from('disponibilites').delete().eq('contact_id', selectedContact.id);\r\n      // Insère les nouvelles dispos\r\n      if (updates.length > 0) {\r\n        await supabase.from('disponibilites').insert(updates);\r\n      }\r\n      // Recharge la map depuis la base\r\n      const { data, error } = await supabase.from('disponibilites').select('*');\r\n      if (!error && data) {\r\n        const map = {};\r\n        data.forEach(d => {\r\n          if (!map[d.contact_id]) map[d.contact_id] = {};\r\n          if (!map[d.contact_id][d.day]) map[d.contact_id][d.day] = {};\r\n          map[d.contact_id][d.day][d.hour] = d.disponible;\r\n        });\r\n        setAvailabilityMap(map);\r\n      }\r\n    }\r\n    closeAvailabilityModal();\r\n  }\r\n\r\n  function openAvailabilityTextModal(contact) {\r\n    setAvailabilityTextContact(contact);\r\n    setShowAvailabilityTextModal(true);\r\n  }\r\n  function closeAvailabilityTextModal() {\r\n    setShowAvailabilityTextModal(false);\r\n    setAvailabilityTextContact(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-10\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Gestion des Contacts</h1>\r\n      {/* Boutons centrés sur la même ligne */}\r\n      <div className=\"flex justify-center items-center gap-8 mb-8\">\r\n        <button\r\n          className=\"button px-4 py-2 rounded-md transition duration-200\"\r\n          onClick={() => setShowRdvModal(true)}\r\n        >\r\n          Prendre un RDV\r\n        </button>\r\n        <button\r\n          className=\"button px-4 py-2 rounded-md transition duration-200\"\r\n          onClick={() => {\r\n            setShowForm(f => !f);\r\n            if (showForm) {\r\n              setForm({ name: '', company: '', email: '', phone: '', role: '', photo_url: '' });\r\n              setEditingId(null);\r\n              setFile(null);\r\n            }\r\n          }}\r\n        >\r\n          {showForm ? 'Annuler' : 'Ajouter un contact'}\r\n        </button>\r\n      </div>\r\n      <div className=\"h-4\" />\r\n\r\n      {/* Modal pour le formulaire d'ajout/modif */}\r\n      {showForm && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80\">\r\n          <div className=\"relative bg-white p-8 rounded-3xl shadow-2xl w-full max-w-md mx-4 transition-all duration-300 border-2 border-blue-100\">\r\n            <button\r\n              className=\"absolute top-3 right-3 text-2xl font-bold text-blue-400 hover:text-blue-700 transition\"\r\n              type=\"button\"\r\n              onClick={() => { setShowForm(false); setEditingId(null); setForm({ name: '', company: '', email: '', phone: '', role: '', photo_url: '' }); setFile(null); }}\r\n              aria-label=\"Fermer\"\r\n            >\r\n              ×\r\n            </button>\r\n            <form onSubmit={handleSubmit} className=\"flex flex-col gap-3\">\r\n              <h2 className=\"text-xl font-bold text-blue-900 text-center mb-4\">{editingId ? 'Modifier le contact' : 'Ajouter un contact'}</h2>\r\n              <input type=\"text\" placeholder=\"Nom\" value={form.name} onChange={e => setForm(f => ({ ...f, name: e.target.value }))} className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\" required />\r\n              <input type=\"text\" placeholder=\"Entreprise\" value={form.company} onChange={e => setForm(f => ({ ...f, company: e.target.value }))} className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\" />\r\n              <input type=\"text\" placeholder=\"Rôle\" value={form.role} onChange={e => setForm(f => ({ ...f, role: e.target.value }))} className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\" />\r\n              <input type=\"email\" placeholder=\"Email\" value={form.email} onChange={e => setForm(f => ({ ...f, email: e.target.value }))} className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\" />\r\n              <input type=\"text\" placeholder=\"Téléphone\" value={form.phone} onChange={e => setForm(f => ({ ...f, phone: e.target.value }))} className=\"rounded p-2 border w-full mb-2 placeholder-gray-400 transition\" />\r\n              <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={e => setFile(e.target.files[0])} className=\"text-sm text-gray-300\" />\r\n              {form.photo_url && !file && <img src={form.photo_url} alt=\"Photo\" className=\"w-16 h-16 object-cover rounded-full mx-auto\" />}\r\n              <button type=\"submit\" className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 rounded-xl mt-2 transition-all duration-200 shadow\">{editingId ? 'Enregistrer les modifications' : 'Ajouter le contact'}</button>\r\n              <button type=\"button\" onClick={() => { setShowForm(false); setEditingId(null); setForm({ name: '', company: '', email: '', phone: '', role: '', photo_url: '' }); setFile(null); }} className=\"font-bold py-2 rounded-xl text-blue-700 hover:bg-blue-50 transition\">Annuler</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {loading && <div className=\"text-center text-gray-400\">Chargement...</div>}\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8\">\r\n        {contacts.map(contact => (\r\n          <div key={contact.id} className=\"rounded-2xl p-6 bg-white border border-primary shadow-md flex flex-col items-center transition hover:shadow-xl\">\r\n            {contact.photo_url\r\n              ? <img src={contact.photo_url} alt={contact.name} className=\"w-16 h-16 rounded-full object-cover mb-4 shadow-md\" />\r\n              : <div className=\"w-16 h-16 rounded-full flex items-center justify-center text-2xl font-bold mb-4 shadow-md bg-gray-200 text-primary\">{contact.name?.[0]}</div>\r\n            }\r\n            <div className=\"text-lg font-semibold mb-1 text-primary\">{contact.name}</div>\r\n            {contact.role && <div className=\"mb-1 px-2 py-1 rounded-full text-xs font-semibold inline-block bg-gray-100 text-primary border border-primary\">{contact.role}</div>}\r\n            <div className=\"text-blue-400 text-sm mb-2\">{contact.company}</div>\r\n            <div className=\"text-gray-500 text-sm mb-1\">{contact.email}</div>\r\n            <div className=\"text-gray-500 text-sm mb-4\">{contact.phone}</div>\r\n            <div className=\"flex gap-2 mt-2 w-full\">\r\n              <button onClick={() => handleEdit(contact)} className=\"flex-1 flex items-center gap-2 bg-white border-2 border-blue-500 text-blue-700 px-4 py-2 rounded-xl shadow hover:bg-blue-500 hover:text-white hover:shadow-lg transition-all duration-200 font-semibold\">\r\n                Modifier\r\n              </button>\r\n              <button onClick={() => handleDelete(contact.id)} className=\"flex-1 flex items-center gap-2 bg-white border-2 border-red-400 text-red-500 px-4 py-2 rounded-xl shadow hover:bg-red-500 hover:text-white hover:shadow-lg transition-all duration-200 font-semibold\">\r\n                Supprimer\r\n              </button>\r\n            </div>\r\n            <button\r\n              className=\"mt-3 w-full flex items-center gap-2 bg-white border-2 border-blue-500 text-blue-700 px-4 py-2 rounded-xl shadow hover:bg-blue-500 hover:text-white hover:shadow-lg transition-all duration-200 font-semibold\"\r\n              onClick={() => openAvailabilityModal(contact)}\r\n            >\r\n              Ajouter les horaires de disponibilité\r\n            </button>\r\n            <button\r\n              className=\"mt-2 w-full flex items-center gap-2 bg-white border-2 border-blue-500 text-blue-700 px-4 py-2 rounded-xl shadow hover:bg-blue-500 hover:text-white hover:shadow-lg transition-all duration-200 font-semibold\"\r\n              onClick={() => openAvailabilityTextModal(contact)}\r\n            >\r\n              Voir les disponibilités (lettres)\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Modal disponibilité */}\r\n      {showAvailabilityModal && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80\">\r\n          <div className=\"relative bg-white p-8 rounded-3xl shadow-2xl w-full max-w-2xl mx-4 transition-all duration-300 border-2 border-blue-100\">\r\n            <h2 className=\"text-xl font-bold text-blue-900 text-center mb-4 rounded-lg px-4 py-2 shadow\">Disponibilités de {selectedContact?.name}</h2>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full border border-[#2563eb] rounded-lg\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"p-2 border-b border-[#2563eb]\"></th>\r\n                    {HOURS.map(h => (\r\n                      <th key={h} className=\"p-2 border-b border-[#2563eb] text-center\">{h}h</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {DAYS.map(day => (\r\n                    <tr key={day}>\r\n                      <td className=\"p-2 font-semibold border-b border-[#2563eb]\">{day}</td>\r\n                      {HOURS.map(hour => (\r\n                        <td key={hour} className=\"p-2 border-b border-[#2563eb] text-center\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={!!availability[day]?.[hour]}\r\n                            onChange={() => toggleAvailability(day, hour)}\r\n                            className=\"accent-[#22c55e] w-5 h-5 rounded focus:ring-2 focus:ring-[#22c55e]\"\r\n                          />\r\n                        </td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"flex justify-end gap-3 mt-6\">\r\n              <button onClick={closeAvailabilityModal} className=\"font-bold py-2 px-4 rounded-xl text-blue-700 hover:bg-blue-50 transition\">Fermer</button>\r\n              <button onClick={handleSaveAvailability} className=\"font-bold py-2 px-4 rounded-xl bg-blue-600 text-white hover:bg-blue-700 transition\">Enregistrer</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal disponibilité texte */}\r\n      {showAvailabilityTextModal && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80\">\r\n          <div className=\"relative bg-white text-blue-900 p-8 rounded-3xl shadow-2xl w-full max-w-md mx-4 transition-all duration-300 border-2 border-blue-100\">\r\n            <h2 className=\"text-xl font-bold text-blue-900 text-center mb-4\">Disponibilités de {availabilityTextContact?.name}</h2>\r\n            <CalendarAvailability\r\n              contact={availabilityTextContact}\r\n              availabilityMap={availabilityMap}\r\n              rdvs={rdvs}\r\n            />\r\n            <div className=\"flex justify-end mt-6\">\r\n              <button onClick={closeAvailabilityTextModal} className=\"font-bold py-2 px-4 rounded-xl text-blue-700 hover:bg-blue-50 transition\">Fermer</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal Prendre un RDV */}\r\n      {showRdvModal && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-white/80\">\r\n          <div className=\"relative bg-white p-8 rounded-3xl shadow-2xl w-full max-w-lg mx-4 transition-all duration-300 border-2 border-blue-100\">\r\n            <button\r\n              className=\"absolute top-3 right-3 text-2xl font-bold text-blue-400 hover:text-blue-700 transition\"\r\n              type=\"button\"\r\n              onClick={() => setShowRdvModal(false)}\r\n              aria-label=\"Fermer\"\r\n            >\r\n              ×\r\n            </button>\r\n            <h2 className=\"text-xl font-bold text-blue-900 text-center mb-4\">Prendre un rendez-vous</h2>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block font-semibold mb-1\">Avec qui ?</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full p-2 rounded border mb-2 placeholder-blue-300\"\r\n                placeholder=\"Rechercher un contact...\"\r\n                value={rdvSearchContact}\r\n                onChange={e => setRdvSearchContact(e.target.value)}\r\n              />\r\n              <div className=\"max-h-32 overflow-y-auto border rounded shadow\">\r\n                {contacts.filter(c => c.name.toLowerCase().includes(rdvSearchContact.toLowerCase())).map(c => (\r\n                  <div\r\n                    key={c.id}\r\n                    className={`px-3 py-2 cursor-pointer ${rdvContact?.id === c.id ? 'font-bold' : ''}`}\r\n                    onClick={() => { setRdvContact(c); setRdvSearchContact(c.name); }}\r\n                  >\r\n                    {c.name} ({c.company})\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block font-semibold mb-1\">Nom de l'étudiant</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full p-2 rounded border mb-2 placeholder-blue-300\"\r\n                placeholder=\"Rechercher un utilisateur...\"\r\n                value={rdvSearchUser}\r\n                onChange={e => setRdvSearchUser(e.target.value)}\r\n              />\r\n              <div className=\"max-h-32 overflow-y-auto border rounded shadow\">\r\n                {users.filter(u => u.name?.toLowerCase().includes(rdvSearchUser.toLowerCase())).map(u => (\r\n                  <div\r\n                    key={u.id}\r\n                    className={`px-3 py-2 cursor-pointer ${rdvUser?.id === u.id ? 'font-bold' : ''}`}\r\n                    onClick={() => { setRdvUser(u); setRdvSearchUser(u.name); }}\r\n                  >\r\n                    {u.name} ({u.email})\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-4 flex gap-4\">\r\n              <div className=\"flex-1\">\r\n                <label className=\"block font-semibold mb-1\">Jour</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"w-full p-2 rounded border mb-2 placeholder-blue-300\"\r\n                  value={rdvDate}\r\n                  onChange={e => setRdvDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <label className=\"block font-semibold mb-1\">Heure</label>\r\n                <select\r\n                  className=\"w-full p-2 rounded border mb-2\"\r\n                  value={rdvHour}\r\n                  onChange={e => setRdvHour(e.target.value)}\r\n                  disabled={!rdvContact || !rdvDate}\r\n                >\r\n                  <option value=\"\">Choisir...</option>\r\n                  {(() => {\r\n                    if (!rdvContact || !rdvDate) return null;\r\n                    // Récupérer les dispos du contact pour ce jour\r\n                    const dateObj = new Date(rdvDate);\r\n                    const dayName = DAYS[dateObj.getDay() === 0 ? 6 : dateObj.getDay() - 1];\r\n                    const dispo = availabilityMap[rdvContact.id]?.[dayName] || {};\r\n                    // Récupérer les heures déjà prises\r\n                    const takenHours = rdvs\r\n                      .filter(r => r.contactId === rdvContact.id && r.date === rdvDate)\r\n                      .map(r => String(r.hour));\r\n                    return Object.keys(dispo)\r\n                      .filter(h => dispo[h])\r\n                      .map(h => (\r\n                        <option\r\n                          key={h}\r\n                          value={h}\r\n                          disabled={takenHours.includes(h)}\r\n                          style={takenHours.includes(h) ? { color: '#f87171', background: '#7f1d1d' } : {}}\r\n                        >\r\n                          {h}h{takenHours.includes(h) ? ' (pris)' : ''}\r\n                        </option>\r\n                      ));\r\n                  })()}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block font-semibold mb-1\">Motif du RDV</label>\r\n              <select\r\n                className=\"w-full p-2 rounded border mb-2\"\r\n                value={selectedMotifId}\r\n                onChange={e => setSelectedMotifId(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\">Sélectionner un motif</option>\r\n                {motifs.map(motif => (\r\n                  <option key={motif.id} value={motif.id}>{motif.label}</option>\r\n                ))}\r\n              </select>\r\n              {motifs.find(m => m.id == selectedMotifId)?.label === 'Autre' && (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full p-2 rounded border mb-2\"\r\n                  placeholder=\"Précisez le motif\"\r\n                  value={customMotif}\r\n                  onChange={e => setCustomMotif(e.target.value)}\r\n                  required\r\n                />\r\n              )}\r\n            </div>\r\n            {rdvError && <div className=\"text-red-300 mb-2\">{rdvError}</div>}\r\n            {rdvConfirmed && <div className=\"text-green-300 font-bold mb-2\">RDV enregistré (démo) !</div>}\r\n            <div className=\"flex justify-end gap-3 mt-6\">\r\n              <button onClick={() => setShowRdvModal(false)} className=\"font-bold py-2 px-4 rounded-lg\">Annuler</button>\r\n              <button\r\n                onClick={async () => {\r\n                  setRdvError('');\r\n                  if (!rdvContact || !rdvUser || !rdvDate || !rdvHour) {\r\n                    setRdvError('Veuillez remplir tous les champs.');\r\n                    return;\r\n                  }\r\n                  // Vérifier si le créneau est déjà pris\r\n                  const { data: existing, error: checkError } = await supabase\r\n                    .from('rdvs2')\r\n                    .select('*')\r\n                    .eq('contactId', rdvContact.id)\r\n                    .eq('date', rdvDate)\r\n                    .eq('hour', rdvHour);\r\n                  if (existing && existing.length > 0) {\r\n                    setRdvError('Ce créneau est déjà réservé !');\r\n                    return;\r\n                  }\r\n                  // Insérer le RDV\r\n                  const { error } = await supabase.from('rdvs2').insert([{\r\n                    contactId: rdvContact.id,\r\n                    contactName: rdvContact.name,\r\n                    userName: rdvUser.name,\r\n                    userEmail: rdvUser.email,\r\n                    date: rdvDate,\r\n                    hour: rdvHour,\r\n                    motif_id: selectedMotifId,\r\n                    motif_custom: motifs.find(m => m.id == selectedMotifId)?.label === 'Autre' ? customMotif : null\r\n                  }]);\r\n                  if (error) {\r\n                    setRdvError('Erreur lors de la prise de RDV : ' + error.message);\r\n                    return;\r\n                  }\r\n                  setRdvConfirmed(true);\r\n                  // Rafraîchir la liste des RDV\r\n                  const { data: newRdvs } = await supabase.from('rdvs2').select('*');\r\n                  setRdvs(newRdvs || []);\r\n                  setTimeout(() => { setShowRdvModal(false); setRdvConfirmed(false); setRdvContact(null); setRdvUser(null); setRdvDate(''); setRdvHour(''); setRdvSearchContact(''); setRdvSearchUser(''); setRdvError(''); }, 1200);\r\n                }}\r\n                className=\"font-bold py-2 px-4 rounded-lg\"\r\n              >\r\n                Confirmer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Liste des RDV pris avec filtres */}\r\n      <div className=\"mt-16\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">RDV pris</h2>\r\n        <div className=\"flex gap-4 mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Filtrer par contact...\"\r\n            className=\"p-2 rounded border mb-2 placeholder-blue-300\"\r\n            value={filterContact}\r\n            onChange={e => setFilterContact(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Filtrer par étudiant...\"\r\n            className=\"p-2 rounded border mb-2 placeholder-blue-300\"\r\n            value={filterUser}\r\n            onChange={e => setFilterUser(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"overflow-x-auto rounded-xl shadow-xl\">\r\n          <table className=\"w-full text-sm text-left border border-primary bg-white rounded-xl overflow-hidden\">\r\n            <thead className=\"bg-gray-100 text-primary\">\r\n              <tr>\r\n                <th className=\"px-4 py-2 border-b border-primary\">Contact</th>\r\n                <th className=\"px-4 py-2 border-b border-primary\">Étudiant</th>\r\n                <th className=\"px-4 py-2 border-b border-primary\">Date</th>\r\n                <th className=\"px-4 py-2 border-b border-primary\">Heure</th>\r\n                <th className=\"px-4 py-2 border-b border-primary\">Motif</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rdvs\r\n                .filter(r => r.contactName?.toLowerCase().includes(filterContact.toLowerCase()))\r\n                .filter(r => r.userName?.toLowerCase().includes(filterUser.toLowerCase()))\r\n                .map((r, idx) => {\r\n                  const motif = motifs.find(m => m.id === r.motif_id);\r\n                  const motifLabel = motif?.label === 'Autre' && r.motif_custom ? r.motif_custom : motif?.label;\r\n                  return (\r\n                    <tr key={r.id} className={`${idx % 2 === 0 ? 'bg-white' : 'bg-gray-50'} hover:bg-gray-100 border-b border-primary text-gray-700`}>\r\n                      <td className=\"px-4 py-2\">{r.contactName}</td>\r\n                      <td className=\"px-4 py-2\">{r.userName}</td>\r\n                      <td className=\"px-4 py-2\">{r.date}</td>\r\n                      <td className=\"px-4 py-2\">{r.hour}h</td>\r\n                      <td className=\"px-4 py-2\">{motifLabel}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Affichage de la pop-up de confirmation */}\r\n      {message && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center z-50\">\r\n          <div className=\"px-8 py-6 rounded-xl shadow-lg text-center animate-fadeIn\">\r\n            <div className=\"text-3xl mb-2\">✔</div>\r\n            <div className=\"text-lg font-bold\">{message}</div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CalendarAvailability({ contact, availabilityMap, rdvs }) {\r\n  const [currentMonth, setCurrentMonth] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [takenHour, setTakenHour] = useState(null);\r\n  const [rdvTakenMsg, setRdvTakenMsg] = useState('');\r\n  if (!contact) return null;\r\n  const year = currentMonth.getFullYear();\r\n  const month = currentMonth.getMonth();\r\n  const days = [];\r\n  const firstDay = new Date(year, month, 1).getDay();\r\n  const nbDays = new Date(year, month + 1, 0).getDate();\r\n  for (let i = 1; i <= nbDays; i++) {\r\n    days.push(new Date(year, month, i));\r\n  }\r\n  // Récupère les dispos du contact\r\n  const dispo = availabilityMap[contact.id] || {};\r\n  // Helper pour savoir si un jour a des dispos\r\n  function hasDispo(date) {\r\n    const dayName = DAYS[date.getDay() === 0 ? 6 : date.getDay() - 1];\r\n    const hours = dispo[dayName] || {};\r\n    return Object.values(hours).some(Boolean);\r\n  }\r\n  // Heures du jour sélectionné\r\n  let selectedDayName = selectedDate ? DAYS[selectedDate.getDay() === 0 ? 6 : selectedDate.getDay() - 1] : null;\r\n  let selectedHours = selectedDate && dispo[selectedDayName] ? Object.entries(dispo[selectedDayName]).filter(([h, v]) => v).map(([h]) => h) : [];\r\n  // Récupérer les heures déjà prises depuis la vraie liste des RDV\r\n  let takenHours = [];\r\n  if (selectedDate && rdvs && contact) {\r\n    takenHours = rdvs\r\n      .filter(r => r.contactId === contact.id && r.date === selectedDate.toISOString().split('T')[0])\r\n      .map(r => String(r.hour));\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <button onClick={() => setCurrentMonth(new Date(year, month - 1, 1))} className=\"px-2 py-1 rounded bg-blue-800 hover:bg-blue-700\">◀</button>\r\n        <span className=\"font-semibold\">{currentMonth.toLocaleString('fr-FR', { month: 'long', year: 'numeric' })}</span>\r\n        <button onClick={() => setCurrentMonth(new Date(year, month + 1, 1))} className=\"px-2 py-1 rounded bg-blue-800 hover:bg-blue-700\">▶</button>\r\n      </div>\r\n      <div className=\"grid grid-cols-7 gap-2 mb-2 text-center text-blue-200 text-xs\">\r\n        <div>Lun</div><div>Mar</div><div>Mer</div><div>Jeu</div><div>Ven</div><div>Sam</div><div>Dim</div>\r\n      </div>\r\n      <div className=\"grid grid-cols-7 gap-2 mb-4\">\r\n        {Array(firstDay === 0 ? 6 : firstDay - 1).fill(null).map((_, i) => (\r\n          <div key={i}></div>\r\n        ))}\r\n        {days.map(date => {\r\n          const isDispo = hasDispo(date);\r\n          return (\r\n            <button\r\n              key={date.toISOString()}\r\n              disabled={!isDispo}\r\n              className={`rounded-lg py-2 text-sm font-semibold transition w-full\r\n                ${isDispo ? 'bg-blue-700 hover:bg-blue-800 text-white' : 'bg-blue-950 text-blue-400 opacity-50 cursor-not-allowed'}\r\n                ${selectedDate && date.toDateString() === selectedDate.toDateString() ? 'ring-2 ring-yellow-400 bg-yellow-700 text-white' : ''}`}\r\n              onClick={() => { setSelectedDate(date); setTakenHour(null); setRdvTakenMsg(''); }}\r\n            >\r\n              {date.getDate()}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      {selectedDate && (\r\n        <div className=\"mt-4\">\r\n          <div className=\"text-center font-semibold mb-2\">Heures disponibles pour le {selectedDate.toLocaleDateString('fr-FR')}</div>\r\n          {selectedHours.length > 0 ? (\r\n            <div className=\"flex flex-wrap gap-2 justify-center\">\r\n              {selectedHours.filter(h => !takenHours.includes(h)).map(h => (\r\n                <span key={h} className=\"bg-green-600 text-white px-3 py-2 rounded-lg font-bold text-sm\">{h}h</span>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center text-blue-300\">Aucune disponibilité ce jour</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}